(window.webpackJsonp=window.webpackJsonp||[]).push([[5],{"1jOq":function(e,r){e.exports=function e(r,t){if(r&&t)return e(r)(t);if("function"!=typeof r)throw new TypeError("need wrapper function");return Object.keys(r).forEach((function(e){o[e]=r[e]})),o;function o(){for(var e=new Array(arguments.length),t=0;t<e.length;t++)e[t]=arguments[t];var o=r.apply(this,e),s=e[e.length-1];return"function"==typeof o&&o!==s&&Object.keys(s).forEach((function(e){o[e]=s[e]})),o}}},"2kIL":function(e,r,t){},"5uH7":function(e,r){e.exports=function e(r,t,o,s){if("function"!=typeof o)throw new Error("method for before hook must be a function");s||(s={});if(Array.isArray(t))return t.reverse().reduce((function(t,o){return e.bind(null,r,o,t,s)}),o)();return Promise.resolve().then((function(){return r.registry[t]?r.registry[t].reduce((function(e,r){return r.hook.bind(null,e,s)}),o)():o(s)}))}},"8oxB":function(e,r){var t,o,s=e.exports={};function n(){throw new Error("setTimeout has not been defined")}function i(){throw new Error("clearTimeout has not been defined")}function a(e){if(t===setTimeout)return setTimeout(e,0);if((t===n||!t)&&setTimeout)return t=setTimeout,setTimeout(e,0);try{return t(e,0)}catch(r){try{return t.call(null,e,0)}catch(r){return t.call(this,e,0)}}}!function(){try{t="function"==typeof setTimeout?setTimeout:n}catch(e){t=n}try{o="function"==typeof clearTimeout?clearTimeout:i}catch(e){o=i}}();var c,p=[],u=!1,l=-1;function m(){u&&c&&(u=!1,c.length?p=c.concat(p):l=-1,p.length&&d())}function d(){if(!u){var e=a(m);u=!0;for(var r=p.length;r;){for(c=p,p=[];++l<r;)c&&c[l].run();l=-1,r=p.length}c=null,u=!1,function(e){if(o===clearTimeout)return clearTimeout(e);if((o===i||!o)&&clearTimeout)return o=clearTimeout,clearTimeout(e);try{o(e)}catch(r){try{return o.call(null,e)}catch(r){return o.call(this,e)}}}(e)}}function g(e,r){this.fun=e,this.array=r}function h(){}s.nextTick=function(e){var r=new Array(arguments.length-1);if(arguments.length>1)for(var t=1;t<arguments.length;t++)r[t-1]=arguments[t];p.push(new g(e,r)),1!==p.length||u||a(d)},g.prototype.run=function(){this.fun.apply(null,this.array)},s.title="browser",s.browser=!0,s.env={},s.argv=[],s.version="",s.versions={},s.on=h,s.addListener=h,s.once=h,s.off=h,s.removeListener=h,s.removeAllListeners=h,s.emit=h,s.prependListener=h,s.prependOnceListener=h,s.listeners=function(e){return[]},s.binding=function(e){throw new Error("process.binding is not supported")},s.cwd=function(){return"/"},s.chdir=function(e){throw new Error("process.chdir is not supported")},s.umask=function(){return 0}},"9JI2":function(e,r,t){},EUoV:function(e,r){e.exports=function(e,r,t,o){var s=o;e.registry[t]||(e.registry[t]=[]);"before"===r&&(o=function(e,r){return Promise.resolve().then(s.bind(null,r)).then(e.bind(null,r))});"after"===r&&(o=function(e,r){var t;return Promise.resolve().then(e.bind(null,r)).then((function(e){return s(t=e,r)})).then((function(){return t}))});"error"===r&&(o=function(e,r){return Promise.resolve().then(e.bind(null,r)).catch((function(e){return s(e,r)}))});e.registry[t].push({hook:o,orig:s})}},"R+3T":function(e,r){e.exports=function(e,r,t){if(!e.registry[r])return;var o=e.registry[r].map((function(e){return e.orig})).indexOf(t);if(-1===o)return;e.registry[r].splice(o,1)}},"TG/k":function(e,r,t){"use strict";t.r(r),t.d(r,"pageQuery",(function(){return Ze}));var o=t("q1tI"),s=t.n(o),n=t("17x9");function i(e,r){(null==r||r>e.length)&&(r=e.length);for(var t=0,o=new Array(r);t<r;t++)o[t]=e[t];return o}function a(e,r){if(e){if("string"==typeof e)return i(e,r);var t=Object.prototype.toString.call(e).slice(8,-1);return"Object"===t&&e.constructor&&(t=e.constructor.name),"Map"===t||"Set"===t?Array.from(e):"Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)?i(e,r):void 0}}function c(e){return function(e){if(Array.isArray(e))return i(e)}(e)||function(e){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(e))return Array.from(e)}(e)||a(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function p(e,r){return(p=Object.setPrototypeOf||function(e,r){return e.__proto__=r,e})(e,r)}function u(e,r){if("function"!=typeof r&&null!==r)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(r&&r.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),r&&p(e,r)}function l(e){return(l="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function m(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function d(e,r){return!r||"object"!==l(r)&&"function"!=typeof r?m(e):r}function g(e){return(g=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}var h=t("o0o1"),T=t.n(h);t("ls82");function f(e,r,t,o,s,n,i){try{var a=e[n](i),c=a.value}catch(p){return void t(p)}a.done?r(c):Promise.resolve(c).then(o,s)}function w(e){return function(){var r=this,t=arguments;return new Promise((function(o,s){var n=e.apply(r,t);function i(e){f(n,o,s,i,a,"next",e)}function a(e){f(n,o,s,i,a,"throw",e)}i(void 0)}))}}function E(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function b(e,r){if(!(e instanceof r))throw new TypeError("Cannot call a class as a function")}function v(e,r){for(var t=0;t<r.length;t++){var o=r[t];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,o.key,o)}}function y(){try{return navigator.userAgent}catch(e){return"<environment undetectable>"}}var _=t("Z8pk");function P(e,r){return function(e){if(Array.isArray(e))return e}(e)||function(e,r){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(e)){var t=[],o=!0,s=!1,n=void 0;try{for(var i,a=e[Symbol.iterator]();!(o=(i=a.next()).done)&&(t.push(i.value),!r||t.length!==r);o=!0);}catch(c){s=!0,n=c}finally{try{o||null==a.return||a.return()}finally{if(s)throw n}}return t}}(e,r)||a(e,r)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function k(e){return"[object Object]"===Object.prototype.toString.call(e)}var G=function(e){var r,t;return!1!==k(e)&&(void 0===(r=e.constructor)||!1!==k(t=r.prototype)&&!1!==t.hasOwnProperty("isPrototypeOf"))},O=t("z6pS");function R(e,r,t){if("string"==typeof r){var o=P(r.split(" "),2),s=o[0],n=o[1];t=Object.assign(n?{method:s,url:n}:{url:s},t)}else t=Object.assign({},r);var i;t.headers=(i=t.headers)?Object.keys(i).reduce((function(e,r){return e[r.toLowerCase()]=i[r],e}),{}):{};var a=function e(r,t){var o=Object.assign({},r);return Object.keys(t).forEach((function(s){G(t[s])&&s in r?o[s]=e(r[s],t[s]):Object.assign(o,E({},s,t[s]))})),o}(e||{},t);return e&&e.mediaType.previews.length&&(a.mediaType.previews=e.mediaType.previews.filter((function(e){return!a.mediaType.previews.includes(e)})).concat(a.mediaType.previews)),a.mediaType.previews=a.mediaType.previews.map((function(e){return e.replace(/-preview/,"")})),a}var S=/\{[^}]+\}/g;function A(e){return e.replace(/^\W+|\W+$/g,"").split(/,/)}function F(e,r){return Object.keys(e).filter((function(e){return!r.includes(e)})).reduce((function(r,t){return r[t]=e[t],r}),{})}function C(e){return e.split(/(%[0-9A-Fa-f]{2})/g).map((function(e){return/%[0-9A-Fa-f]/.test(e)||(e=encodeURI(e).replace(/%5B/g,"[").replace(/%5D/g,"]")),e})).join("")}function U(e){return encodeURIComponent(e).replace(/[!'()*]/g,(function(e){return"%"+e.charCodeAt(0).toString(16).toUpperCase()}))}function j(e,r,t){return r="+"===e||"#"===e?C(r):U(r),t?U(t)+"="+r:r}function D(e){return null!=e}function L(e){return";"===e||"&"===e||"?"===e}function q(e,r){var t=["+","#",".","/",";","?","&"];return e.replace(/\{([^\{\}]+)\}|([^\{\}]+)/g,(function(e,o,s){if(o){var n="",i=[];if(-1!==t.indexOf(o.charAt(0))&&(n=o.charAt(0),o=o.substr(1)),o.split(/,/g).forEach((function(e){var t=/([^:\*]*)(?::(\d+)|(\*))?/.exec(e);i.push(function(e,r,t,o){var s=e[t],n=[];if(D(s)&&""!==s)if("string"==typeof s||"number"==typeof s||"boolean"==typeof s)s=s.toString(),o&&"*"!==o&&(s=s.substring(0,parseInt(o,10))),n.push(j(r,s,L(r)?t:""));else if("*"===o)Array.isArray(s)?s.filter(D).forEach((function(e){n.push(j(r,e,L(r)?t:""))})):Object.keys(s).forEach((function(e){D(s[e])&&n.push(j(r,s[e],e))}));else{var i=[];Array.isArray(s)?s.filter(D).forEach((function(e){i.push(j(r,e))})):Object.keys(s).forEach((function(e){D(s[e])&&(i.push(U(e)),i.push(j(r,s[e].toString())))})),L(r)?n.push(U(t)+"="+i.join(",")):0!==i.length&&n.push(i.join(","))}else";"===r?D(s)&&n.push(U(t)):""!==s||"&"!==r&&"?"!==r?""===s&&n.push(""):n.push(U(t)+"=");return n}(r,n,t[1],t[2]||t[3]))})),n&&"+"!==n){var a=",";return"?"===n?a="&":"#"!==n&&(a=n),(0!==i.length?n:"")+i.join(a)}return i.join(",")}return C(s)}))}function I(e){var r,t,o=e.method.toUpperCase(),s=(e.url||"/").replace(/:([a-z]\w+)/g,"{+$1}"),n=Object.assign({},e.headers),i=F(e,["method","baseUrl","url","headers","request","mediaType"]),a=function(e){var r=e.match(S);return r?r.map(A).reduce((function(e,r){return e.concat(r)}),[]):[]}(s);s=(t=s,{expand:q.bind(null,t)}).expand(i),/^http/.test(s)||(s=e.baseUrl+s);var c=F(i,Object.keys(e).filter((function(e){return a.includes(e)})).concat("baseUrl"));if(!/application\/octet-stream/i.test(n.accept)&&(e.mediaType.format&&(n.accept=n.accept.split(/,/).map((function(r){return r.replace(/application\/vnd(\.\w+)(\.v3)?(\.\w+)?(\+json)?$/,"application/vnd$1$2.".concat(e.mediaType.format))})).join(",")),e.mediaType.previews.length)){var p=n.accept.match(/[\w-]+(?=-preview)/g)||[];n.accept=p.concat(e.mediaType.previews).map((function(r){var t=e.mediaType.format?".".concat(e.mediaType.format):"+json";return"application/vnd.github.".concat(r,"-preview").concat(t)})).join(",")}return["GET","HEAD"].includes(o)?s=function(e,r){var t=/\?/.test(e)?"&":"?",o=Object.keys(r);return 0===o.length?e:e+t+o.map((function(e){return"q"===e?"q="+r.q.split("+").map(encodeURIComponent).join("+"):"".concat(e,"=").concat(encodeURIComponent(r[e]))})).join("&")}(s,c):"data"in c?r=c.data:Object.keys(c).length?r=c:n["content-length"]=0,n["content-type"]||void 0===r||(n["content-type"]="application/json; charset=utf-8"),["PATCH","PUT"].includes(o)&&void 0===r&&(r=""),Object.assign({method:o,url:s,headers:n},void 0!==r?{body:r}:null,e.request?{request:e.request}:null)}function x(e,r,t){return I(R(e,r,t))}var B=function e(r,t){var o=R(r,t),s=x.bind(null,o);return Object.assign(s,{DEFAULTS:o,defaults:e.bind(null,o),merge:R.bind(null,o),parse:I})}(null,{method:"GET",baseUrl:"https://api.github.com",headers:{accept:"application/vnd.github.v3+json","user-agent":"octokit-endpoint.js/".concat("6.0.5"," ").concat(Object(O.a)())},mediaType:{format:"",previews:[]}});function H(e){return"[object Object]"===Object.prototype.toString.call(e)}var M=function(e){var r,t;return!1!==H(e)&&(void 0===(r=e.constructor)||!1!==H(t=r.prototype)&&!1!==t.hasOwnProperty("isPrototypeOf"))},W=t("oY9k"),N=t.n(W);function K(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}function z(e,r,t){return(z=K()?Reflect.construct:function(e,r,t){var o=[null];o.push.apply(o,r);var s=new(Function.bind.apply(e,o));return t&&p(s,t.prototype),s}).apply(null,arguments)}function J(e){var r="function"==typeof Map?new Map:void 0;return(J=function(e){if(null===e||(t=e,-1===Function.toString.call(t).indexOf("[native code]")))return e;var t;if("function"!=typeof e)throw new TypeError("Super expression must either be null or a function");if(void 0!==r){if(r.has(e))return r.get(e);r.set(e,o)}function o(){return z(e,arguments,g(this).constructor)}return o.prototype=Object.create(e.prototype,{constructor:{value:o,enumerable:!1,writable:!0,configurable:!0}}),p(o,e)})(e)}function V(e){var r=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}();return function(){var t,o=g(e);if(r){var s=g(this).constructor;t=Reflect.construct(o,arguments,s)}else t=o.apply(this,arguments);return d(this,t)}}var $=function(e){u(t,e);var r=V(t);function t(e){var o;return b(this,t),o=r.call(this,e),Error.captureStackTrace&&Error.captureStackTrace(m(o),o.constructor),o.name="Deprecation",o}return t}(J(Error)),Z=t("VmuJ");function Y(e){var r=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}();return function(){var t,o=g(e);if(r){var s=g(this).constructor;t=Reflect.construct(o,arguments,s)}else t=o.apply(this,arguments);return d(this,t)}}var Q=t.n(Z)()((function(e){return console.warn(e)})),X=function(e){u(t,e);var r=Y(t);function t(e,o,s){var n;b(this,t),n=r.call(this,e),Error.captureStackTrace&&Error.captureStackTrace(m(n),n.constructor),n.name="HttpError",n.status=o,Object.defineProperty(m(n),"code",{get:function(){return Q(new $("[@octokit/request-error] `error.code` is deprecated, use `error.status`.")),o}}),n.headers=s.headers||{};var i=Object.assign({},s.request);return s.request.headers.authorization&&(i.headers=Object.assign({},s.request.headers,{authorization:s.request.headers.authorization.replace(/ .*$/," [REDACTED]")})),i.url=i.url.replace(/\bclient_secret=\w+/g,"client_secret=[REDACTED]").replace(/\baccess_token=\w+/g,"access_token=[REDACTED]"),n.request=i,n}return t}(J(Error));function ee(e,r){var t;if("undefined"==typeof Symbol||null==e[Symbol.iterator]){if(Array.isArray(e)||(t=function(e,r){if(!e)return;if("string"==typeof e)return re(e,r);var t=Object.prototype.toString.call(e).slice(8,-1);"Object"===t&&e.constructor&&(t=e.constructor.name);if("Map"===t||"Set"===t)return Array.from(e);if("Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t))return re(e,r)}(e))||r&&e&&"number"==typeof e.length){t&&(e=t);var o=0,s=function(){};return{s:s,n:function(){return o>=e.length?{done:!0}:{done:!1,value:e[o++]}},e:function(e){throw e},f:s}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var n,i=!0,a=!1;return{s:function(){t=e[Symbol.iterator]()},n:function(){var e=t.next();return i=e.done,e},e:function(e){a=!0,n=e},f:function(){try{i||null==t.return||t.return()}finally{if(a)throw n}}}}function re(e,r){(null==r||r>e.length)&&(r=e.length);for(var t=0,o=new Array(r);t<r;t++)o[t]=e[t];return o}function te(e){(M(e.body)||Array.isArray(e.body))&&(e.body=JSON.stringify(e.body));var r,t,o={};return(e.request&&e.request.fetch||N.a)(e.url,Object.assign({method:e.method,body:e.body,headers:e.headers,redirect:e.redirect},e.request)).then((function(s){t=s.url,r=s.status;var n,i=ee(s.headers);try{for(i.s();!(n=i.n()).done;){var a=n.value;o[a[0]]=a[1]}}catch(p){i.e(p)}finally{i.f()}if(204!==r&&205!==r){if("HEAD"===e.method){if(r<400)return;throw new X(s.statusText,r,{headers:o,request:e})}if(304===r)throw new X("Not modified",r,{headers:o,request:e});if(r>=400)return s.text().then((function(t){var s=new X(t,r,{headers:o,request:e});try{var n=JSON.parse(s.message);Object.assign(s,n);var i=n.errors;s.message=s.message+": "+i.map(JSON.stringify).join(", ")}catch(a){}throw s}));var c=s.headers.get("content-type");return/application\/json/.test(c)?s.json():!c||/^text\/|charset=utf-8$/.test(c)?s.text():function(e){return e.arrayBuffer()}(s)}})).then((function(e){return{status:r,url:t,headers:o,data:e}})).catch((function(r){if(r instanceof X)throw r;throw new X(r.message,500,{headers:o,request:e})}))}var oe=function e(r,t){var o=r.defaults(t);return Object.assign((function(r,t){var s=o.merge(r,t);if(!s.request||!s.request.hook)return te(o.parse(s));var n=function(e,r){return te(o.parse(o.merge(e,r)))};return Object.assign(n,{endpoint:o,defaults:e.bind(null,o)}),s.request.hook(n,s)}),{endpoint:o,defaults:e.bind(null,o)})}(B,{headers:{"user-agent":"octokit-request.js/".concat("5.4.7"," ").concat(Object(O.a)())}});function se(e){var r=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}();return function(){var t,o=g(e);if(r){var s=g(this).constructor;t=Reflect.construct(o,arguments,s)}else t=o.apply(this,arguments);return d(this,t)}}var ne=function(e){u(t,e);var r=se(t);function t(e,o){var s;b(this,t);var n=o.data.errors[0].message;return s=r.call(this,n),Object.assign(m(s),o.data),Object.assign(m(s),{headers:o.headers}),s.name="GraphqlError",s.request=e,Error.captureStackTrace&&Error.captureStackTrace(m(s),s.constructor),s}return t}(J(Error)),ie=["method","baseUrl","url","headers","request","query","mediaType"];function ae(e,r){var t=e.defaults(r);return Object.assign((function(e,r){return function(e,r,t){t=t="string"==typeof r?Object.assign({query:r},t):r;var o=Object.keys(t).reduce((function(e,r){return ie.includes(r)?(e[r]=t[r],e):(e.variables||(e.variables={}),e.variables[r]=t[r],e)}),{});return e(o).then((function(e){if(e.data.errors){for(var r={},t=0,s=Object.keys(e.headers);t<s.length;t++){var n=s[t];r[n]=e.headers[n]}throw new ne(o,{headers:r,data:e.data})}return e.data.data}))}(t,e,r)}),{defaults:ae.bind(null,t),endpoint:oe.endpoint})}ae(oe,{headers:{"user-agent":"octokit-graphql.js/".concat("4.5.4"," ").concat(Object(O.a)())},method:"POST",url:"/graphql"});function ce(e){return ae(e,{method:"POST",url:"/graphql"})}function pe(e){return ue.apply(this,arguments)}function ue(){return(ue=w(T.a.mark((function e(r){var t;return T.a.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return t=3===r.split(/\./).length?"app":/^v\d+\./.test(r)?"installation":"oauth",e.abrupt("return",{type:"token",token:r,tokenType:t});case 2:case"end":return e.stop()}}),e)})))).apply(this,arguments)}function le(e){return 3===e.split(/\./).length?"bearer ".concat(e):"token ".concat(e)}function me(e,r,t,o){return de.apply(this,arguments)}function de(){return(de=w(T.a.mark((function e(r,t,o,s){var n;return T.a.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return(n=t.endpoint.merge(o,s)).headers.authorization=le(r),e.abrupt("return",t(n));case 3:case"end":return e.stop()}}),e)})))).apply(this,arguments)}var ge=function(e){if(!e)throw new Error("[@octokit/auth-token] No token passed to createTokenAuth");if("string"!=typeof e)throw new Error("[@octokit/auth-token] Token passed to createTokenAuth is not a string");return e=e.replace(/^(token|bearer) +/i,""),Object.assign(pe.bind(null,e),{hook:me.bind(null,e)})};function he(e){var r=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}();return function(){var t,o=g(e);if(r){var s=g(this).constructor;t=Reflect.construct(o,arguments,s)}else t=o.apply(this,arguments);return d(this,t)}}function Te(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,o)}return t}function fe(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?Te(Object(t),!0).forEach((function(r){E(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):Te(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}var we=function(){function e(){var r=this,t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};b(this,e);var o=new _.Collection,s={baseUrl:oe.endpoint.DEFAULTS.baseUrl,headers:{},request:Object.assign({},t.request,{hook:o.bind(null,"request")}),mediaType:{previews:[],format:""}};if(s.headers["user-agent"]=[t.userAgent,"octokit-core.js/".concat("2.5.4"," ").concat(y())].filter(Boolean).join(" "),t.baseUrl&&(s.baseUrl=t.baseUrl),t.previews&&(s.mediaType.previews=t.previews),t.timeZone&&(s.headers["time-zone"]=t.timeZone),this.request=oe.defaults(s),this.graphql=ce(this.request).defaults(fe(fe({},s),{},{baseUrl:s.baseUrl.replace(/\/api\/v3$/,"/api")})),this.log=Object.assign({debug:function(){},info:function(){},warn:console.warn.bind(console),error:console.error.bind(console)},t.log),this.hook=o,t.authStrategy){var n=t.authStrategy(Object.assign({request:this.request},t.auth));o.wrap("request",n.hook),this.auth=n}else if(t.auth){var i=ge(t.auth);o.wrap("request",i.hook),this.auth=i}else this.auth=w(T.a.mark((function e(){return T.a.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.abrupt("return",{type:"unauthenticated"});case 1:case"end":return e.stop()}}),e)})));var a=this.constructor;a.plugins.forEach((function(e){Object.assign(r,e(r,t))}))}var r,t,o;return r=e,o=[{key:"defaults",value:function(e){return function(r){u(o,r);var t=he(o);function o(){b(this,o);var r=(arguments.length<=0?void 0:arguments[0])||{};return t.call(this,Object.assign({},e,r,r.userAgent&&e.userAgent?{userAgent:"".concat(r.userAgent," ").concat(e.userAgent)}:null))}return o}(this)}},{key:"plugin",value:function(e){var r;e instanceof Array&&console.warn(["Passing an array of plugins to Octokit.plugin() has been deprecated.","Instead of:","  Octokit.plugin([plugin1, plugin2, ...])","Use:","  Octokit.plugin(plugin1, plugin2, ...)"].join("\n"));for(var t=this.plugins,o=arguments.length,s=new Array(o>1?o-1:0),n=1;n<o;n++)s[n-1]=arguments[n];var i=[].concat(c(e instanceof Array?e:[e]),s),a=((r=function(e){u(t,e);var r=he(t);function t(){return b(this,t),r.apply(this,arguments)}return t}(this)).plugins=t.concat(i.filter((function(e){return!t.includes(e)}))),r);return a}}],(t=null)&&v(r.prototype,t),o&&v(r,o),e}();we.VERSION="2.5.4",we.plugins=[];function Ee(e){e.hook.wrap("request",(function(r,t){e.log.debug("request",t);var o=Date.now(),s=e.request.endpoint.parse(t),n=s.url.replace(t.baseUrl,"");return r(t).then((function(r){return e.log.info("".concat(s.method," ").concat(n," - ").concat(r.status," in ").concat(Date.now()-o,"ms")),r})).catch((function(r){throw e.log.info("".concat(s.method," ").concat(n," - ").concat(r.status," in ").concat(Date.now()-o,"ms")),r}))}))}Ee.VERSION="1.0.0";function be(e){if(!("total_count"in e.data&&!("url"in e.data)))return e;var r=e.data.incomplete_results,t=e.data.repository_selection,o=e.data.total_count;delete e.data.incomplete_results,delete e.data.repository_selection,delete e.data.total_count;var s=Object.keys(e.data)[0],n=e.data[s];return e.data=n,void 0!==r&&(e.data.incomplete_results=r),void 0!==t&&(e.data.repository_selection=t),e.data.total_count=o,e}function ve(e,r,t){var o="function"==typeof r?r.endpoint(t):e.request.endpoint(r,t),s="function"==typeof r?r:e.request,n=o.method,i=o.headers,a=o.url;return E({},Symbol.asyncIterator,(function(){return{next:function(){return a?s({method:n,url:a,headers:i}).then(be).then((function(e){return a=((e.headers.link||"").match(/<([^>]+)>;\s*rel="next"/)||[])[1],{value:e}})):Promise.resolve({done:!0})}}}))}function ye(e,r,t,o){return"function"==typeof t&&(o=t,t=void 0),function e(r,t,o,s){return o.next().then((function(n){if(n.done)return t;var i=!1;return t=t.concat(s?s(n.value,(function(){i=!0})):n.value.data),i?t:e(r,t,o,s)}))}(e,[],ve(e,r,t)[Symbol.asyncIterator](),o)}function _e(e){return{paginate:Object.assign(ye.bind(null,e),{iterator:ve.bind(null,e)})}}_e.VERSION="2.3.1";var Pe={actions:{addSelectedRepoToOrgSecret:["PUT /orgs/{org}/actions/secrets/{secret_name}/repositories/{repository_id}"],cancelWorkflowRun:["POST /repos/{owner}/{repo}/actions/runs/{run_id}/cancel"],createOrUpdateOrgSecret:["PUT /orgs/{org}/actions/secrets/{secret_name}"],createOrUpdateRepoSecret:["PUT /repos/{owner}/{repo}/actions/secrets/{secret_name}",{},{renamedParameters:{name:"secret_name"}}],createOrUpdateSecretForRepo:["PUT /repos/{owner}/{repo}/actions/secrets/{secret_name}",{},{renamed:["actions","createOrUpdateRepoSecret"],renamedParameters:{name:"secret_name"}}],createRegistrationToken:["POST /repos/{owner}/{repo}/actions/runners/registration-token",{},{renamed:["actions","createRegistrationTokenForRepo"]}],createRegistrationTokenForOrg:["POST /orgs/{org}/actions/runners/registration-token"],createRegistrationTokenForRepo:["POST /repos/{owner}/{repo}/actions/runners/registration-token"],createRemoveToken:["POST /repos/{owner}/{repo}/actions/runners/remove-token",{},{renamed:["actions","createRemoveTokenForRepo"]}],createRemoveTokenForOrg:["POST /orgs/{org}/actions/runners/remove-token"],createRemoveTokenForRepo:["POST /repos/{owner}/{repo}/actions/runners/remove-token"],deleteArtifact:["DELETE /repos/{owner}/{repo}/actions/artifacts/{artifact_id}"],deleteOrgSecret:["DELETE /orgs/{org}/actions/secrets/{secret_name}"],deleteRepoSecret:["DELETE /repos/{owner}/{repo}/actions/secrets/{secret_name}",{},{renamedParameters:{name:"secret_name"}}],deleteSecretFromRepo:["DELETE /repos/{owner}/{repo}/actions/secrets/{secret_name}",{},{renamed:["actions","deleteRepoSecret"],renamedParameters:{name:"secret_name"}}],deleteSelfHostedRunnerFromOrg:["DELETE /orgs/{org}/actions/runners/{runner_id}"],deleteSelfHostedRunnerFromRepo:["DELETE /repos/{owner}/{repo}/actions/runners/{runner_id}"],deleteWorkflowRunLogs:["DELETE /repos/{owner}/{repo}/actions/runs/{run_id}/logs"],downloadArtifact:["GET /repos/{owner}/{repo}/actions/artifacts/{artifact_id}/{archive_format}"],downloadJobLogsForWorkflowRun:["GET /repos/{owner}/{repo}/actions/jobs/{job_id}/logs"],downloadWorkflowJobLogs:["GET /repos/{owner}/{repo}/actions/jobs/{job_id}/logs",{},{renamed:["actions","downloadJobLogsForWorkflowRun"]}],downloadWorkflowRunLogs:["GET /repos/{owner}/{repo}/actions/runs/{run_id}/logs"],getArtifact:["GET /repos/{owner}/{repo}/actions/artifacts/{artifact_id}"],getJobForWorkflowRun:["GET /repos/{owner}/{repo}/actions/jobs/{job_id}"],getOrgPublicKey:["GET /orgs/{org}/actions/secrets/public-key"],getOrgSecret:["GET /orgs/{org}/actions/secrets/{secret_name}"],getPublicKey:["GET /repos/{owner}/{repo}/actions/secrets/public-key",{},{renamed:["actions","getRepoPublicKey"]}],getRepoPublicKey:["GET /repos/{owner}/{repo}/actions/secrets/public-key"],getRepoSecret:["GET /repos/{owner}/{repo}/actions/secrets/{secret_name}",{},{renamedParameters:{name:"secret_name"}}],getSecret:["GET /repos/{owner}/{repo}/actions/secrets/{secret_name}",{},{renamed:["actions","getRepoSecret"],renamedParameters:{name:"secret_name"}}],getSelfHostedRunner:["GET /repos/{owner}/{repo}/actions/runners/{runner_id}",{},{renamed:["actions","getSelfHostedRunnerForRepo"]}],getSelfHostedRunnerForOrg:["GET /orgs/{org}/actions/runners/{runner_id}"],getSelfHostedRunnerForRepo:["GET /repos/{owner}/{repo}/actions/runners/{runner_id}"],getWorkflow:["GET /repos/{owner}/{repo}/actions/workflows/{workflow_id}"],getWorkflowJob:["GET /repos/{owner}/{repo}/actions/jobs/{job_id}",{},{renamed:["actions","getJobForWorkflowRun"]}],getWorkflowRun:["GET /repos/{owner}/{repo}/actions/runs/{run_id}"],getWorkflowRunUsage:["GET /repos/{owner}/{repo}/actions/runs/{run_id}/timing"],getWorkflowUsage:["GET /repos/{owner}/{repo}/actions/workflows/{workflow_id}/timing"],listArtifactsForRepo:["GET /repos/{owner}/{repo}/actions/artifacts"],listDownloadsForSelfHostedRunnerApplication:["GET /repos/{owner}/{repo}/actions/runners/downloads",{},{renamed:["actions","listRunnerApplicationsForRepo"]}],listJobsForWorkflowRun:["GET /repos/{owner}/{repo}/actions/runs/{run_id}/jobs"],listOrgSecrets:["GET /orgs/{org}/actions/secrets"],listRepoSecrets:["GET /repos/{owner}/{repo}/actions/secrets"],listRepoWorkflowRuns:["GET /repos/{owner}/{repo}/actions/runs",{},{renamed:["actions","listWorkflowRunsForRepo"]}],listRepoWorkflows:["GET /repos/{owner}/{repo}/actions/workflows"],listRunnerApplicationsForOrg:["GET /orgs/{org}/actions/runners/downloads"],listRunnerApplicationsForRepo:["GET /repos/{owner}/{repo}/actions/runners/downloads"],listSecretsForRepo:["GET /repos/{owner}/{repo}/actions/secrets",{},{renamed:["actions","listRepoSecrets"]}],listSelectedReposForOrgSecret:["GET /orgs/{org}/actions/secrets/{secret_name}/repositories"],listSelfHostedRunnersForOrg:["GET /orgs/{org}/actions/runners"],listSelfHostedRunnersForRepo:["GET /repos/{owner}/{repo}/actions/runners"],listWorkflowJobLogs:["GET /repos/{owner}/{repo}/actions/jobs/{job_id}/logs",{},{renamed:["actions","downloadWorkflowJobLogs"]}],listWorkflowRunArtifacts:["GET /repos/{owner}/{repo}/actions/runs/{run_id}/artifacts"],listWorkflowRunLogs:["GET /repos/{owner}/{repo}/actions/runs/{run_id}/logs",{},{renamed:["actions","downloadWorkflowRunLogs"]}],listWorkflowRuns:["GET /repos/{owner}/{repo}/actions/workflows/{workflow_id}/runs"],listWorkflowRunsForRepo:["GET /repos/{owner}/{repo}/actions/runs"],reRunWorkflow:["POST /repos/{owner}/{repo}/actions/runs/{run_id}/rerun"],removeSelectedRepoFromOrgSecret:["DELETE /orgs/{org}/actions/secrets/{secret_name}/repositories/{repository_id}"],removeSelfHostedRunner:["DELETE /repos/{owner}/{repo}/actions/runners/{runner_id}",{},{renamed:["actions","deleteSelfHostedRunnerFromRepo"]}],setSelectedReposForOrgSecret:["PUT /orgs/{org}/actions/secrets/{secret_name}/repositories"]},activity:{checkRepoIsStarredByAuthenticatedUser:["GET /user/starred/{owner}/{repo}"],checkStarringRepo:["GET /user/starred/{owner}/{repo}",{},{renamed:["activity","checkRepoIsStarredByAuthenticatedUser"]}],deleteRepoSubscription:["DELETE /repos/{owner}/{repo}/subscription"],deleteThreadSubscription:["DELETE /notifications/threads/{thread_id}/subscription"],getFeeds:["GET /feeds"],getRepoSubscription:["GET /repos/{owner}/{repo}/subscription"],getThread:["GET /notifications/threads/{thread_id}"],getThreadSubscription:["PUT /notifications",{},{renamed:["activity","getThreadSubscriptionForAuthenticatedUser"]}],getThreadSubscriptionForAuthenticatedUser:["GET /notifications/threads/{thread_id}/subscription"],listEventsForAuthenticatedUser:["GET /users/{username}/events"],listEventsForOrg:["GET /users/{username}/events/orgs/{org}",{},{renamed:["activity","listOrgEventsForAuthenticatedUser"]}],listEventsForUser:["GET /users/{username}/events",{},{renamed:["activity","listEventsForAuthenticatedUser"]}],listFeeds:["GET /feeds",{},{renamed:["activity","getFeeds"]}],listNotifications:["GET /notifications",{},{renamed:["activity","listNotificationsForAuthenticatedUser"]}],listNotificationsForAuthenticatedUser:["GET /notifications"],listNotificationsForRepo:["GET /repos/{owner}/{repo}/notifications",{},{renamed:["activity","listRepoNotificationsForAuthenticatedUser"]}],listOrgEventsForAuthenticatedUser:["GET /users/{username}/events/orgs/{org}"],listPublicEvents:["GET /events"],listPublicEventsForOrg:["GET /orgs/{org}/events",{},{renamed:["activity","listPublicOrgEvents"]}],listPublicEventsForRepoNetwork:["GET /networks/{owner}/{repo}/events"],listPublicEventsForUser:["GET /users/{username}/events/public"],listPublicOrgEvents:["GET /orgs/{org}/events"],listReceivedEventsForUser:["GET /users/{username}/received_events"],listReceivedPublicEventsForUser:["GET /users/{username}/received_events/public"],listRepoEvents:["GET /repos/{owner}/{repo}/events"],listRepoNotificationsForAuthenticatedUser:["GET /repos/{owner}/{repo}/notifications"],listReposStarredByAuthenticatedUser:["GET /user/starred"],listReposStarredByUser:["GET /users/{username}/starred"],listReposWatchedByUser:["GET /users/{username}/subscriptions"],listStargazersForRepo:["GET /repos/{owner}/{repo}/stargazers"],listWatchedReposForAuthenticatedUser:["GET /user/subscriptions"],listWatchersForRepo:["GET /repos/{owner}/{repo}/subscribers"],markAsRead:["PUT /notifications",{},{renamed:["activity","markNotificationsAsRead"]}],markNotificationsAsRead:["PUT /notifications"],markNotificationsAsReadForRepo:["PUT /repos/{owner}/{repo}/notifications",{},{renamed:["activity","markRepoNotificationsAsRead"]}],markRepoNotificationsAsRead:["PUT /repos/{owner}/{repo}/notifications"],markThreadAsRead:["PATCH /notifications/threads/{thread_id}"],setRepoSubscription:["PUT /repos/{owner}/{repo}/subscription"],setThreadSubscription:["PUT /notifications/threads/{thread_id}/subscription"],starRepo:["PUT /user/starred/{owner}/{repo}",{},{renamed:["activity","starRepoForAuthenticatedUser"]}],starRepoForAuthenticatedUser:["PUT /user/starred/{owner}/{repo}"],unstarRepo:["DELETE /user/starred/{owner}/{repo}",{},{renamed:["activity","unstarRepoForAuthenticatedUser"]}],unstarRepoForAuthenticatedUser:["DELETE /user/starred/{owner}/{repo}"]},apps:{addRepoToInstallation:["PUT /user/installations/{installation_id}/repositories/{repository_id}",{mediaType:{previews:["machine-man"]}}],checkAccountIsAssociatedWithAny:["GET /marketplace_listing/accounts/{account_id}",{},{renamed:["apps","getSubscriptionPlanForAccount"]}],checkAccountIsAssociatedWithAnyStubbed:["GET /marketplace_listing/stubbed/accounts/{account_id}",{},{renamed:["apps","getSubscriptionPlanForAccountStubbed"]}],checkToken:["POST /applications/{client_id}/token"],createContentAttachment:["POST /content_references/{content_reference_id}/attachments",{mediaType:{previews:["corsair"]}}],createFromManifest:["POST /app-manifests/{code}/conversions"],createInstallationAccessToken:["POST /app/installations/{installation_id}/access_tokens",{mediaType:{previews:["machine-man"]}}],createInstallationToken:["POST /app/installations/{installation_id}/access_tokens",{mediaType:{previews:["machine-man"]}},{renamed:["apps","createInstallationAccessToken"]}],deleteAuthorization:["DELETE /applications/{client_id}/grant"],deleteInstallation:["DELETE /app/installations/{installation_id}",{mediaType:{previews:["machine-man"]}}],deleteToken:["DELETE /applications/{client_id}/token"],getAuthenticated:["GET /app",{mediaType:{previews:["machine-man"]}}],getBySlug:["GET /apps/{app_slug}",{mediaType:{previews:["machine-man"]}}],getInstallation:["GET /app/installations/{installation_id}",{mediaType:{previews:["machine-man"]}}],getOrgInstallation:["GET /orgs/{org}/installation",{mediaType:{previews:["machine-man"]}}],getRepoInstallation:["GET /repos/{owner}/{repo}/installation",{mediaType:{previews:["machine-man"]}}],getSubscriptionPlanForAccount:["GET /marketplace_listing/accounts/{account_id}"],getSubscriptionPlanForAccountStubbed:["GET /marketplace_listing/stubbed/accounts/{account_id}"],getUserInstallation:["GET /users/{username}/installation",{mediaType:{previews:["machine-man"]}}],listAccountsForPlan:["GET /marketplace_listing/plans/{plan_id}/accounts"],listAccountsForPlanStubbed:["GET /marketplace_listing/stubbed/plans/{plan_id}/accounts"],listAccountsUserOrOrgOnPlan:["GET /marketplace_listing/plans/{plan_id}/accounts",{},{renamed:["apps","listAccountsForPlan"]}],listAccountsUserOrOrgOnPlanStubbed:["GET /marketplace_listing/stubbed/plans/{plan_id}/accounts",{},{renamed:["apps","listAccountsForPlanStubbed"]}],listInstallationReposForAuthenticatedUser:["GET /user/installations/{installation_id}/repositories",{mediaType:{previews:["machine-man"]}}],listInstallations:["GET /app/installations",{mediaType:{previews:["machine-man"]}}],listInstallationsForAuthenticatedUser:["GET /user/installations",{mediaType:{previews:["machine-man"]}}],listMarketplacePurchasesForAuthenticatedUser:["GET /user/marketplace_purchases",{},{renamed:["apps","listSubscriptionsForAuthenticatedUser"]}],listMarketplacePurchasesForAuthenticatedUserStubbed:["GET /user/marketplace_purchases/stubbed",{},{renamed:["apps","listSubscriptionsForAuthenticatedUserStubbed"]}],listPlans:["GET /marketplace_listing/plans"],listPlansStubbed:["GET /marketplace_listing/stubbed/plans"],listRepos:["GET /installation/repositories",{mediaType:{previews:["machine-man"]}},{renamed:["apps","listReposAccessibleToInstallation"]}],listReposAccessibleToInstallation:["GET /installation/repositories",{mediaType:{previews:["machine-man"]}}],listSubscriptionsForAuthenticatedUser:["GET /user/marketplace_purchases"],listSubscriptionsForAuthenticatedUserStubbed:["GET /user/marketplace_purchases/stubbed"],removeRepoFromInstallation:["DELETE /user/installations/{installation_id}/repositories/{repository_id}",{mediaType:{previews:["machine-man"]}}],resetToken:["PATCH /applications/{client_id}/token"],revokeInstallationAccessToken:["DELETE /installation/token"],revokeInstallationToken:["DELETE /installation/token",{},{renamed:["apps","revokeInstallationAccessToken"]}],suspendInstallation:["PUT /app/installations/{installation_id}/suspended"],unsuspendInstallation:["DELETE /app/installations/{installation_id}/suspended"]},checks:{create:["POST /repos/{owner}/{repo}/check-runs",{mediaType:{previews:["antiope"]}}],createSuite:["POST /repos/{owner}/{repo}/check-suites",{mediaType:{previews:["antiope"]}}],get:["GET /repos/{owner}/{repo}/check-runs/{check_run_id}",{mediaType:{previews:["antiope"]}}],getSuite:["GET /repos/{owner}/{repo}/check-suites/{check_suite_id}",{mediaType:{previews:["antiope"]}}],listAnnotations:["GET /repos/{owner}/{repo}/check-runs/{check_run_id}/annotations",{mediaType:{previews:["antiope"]}}],listForRef:["GET /repos/{owner}/{repo}/commits/{ref}/check-runs",{mediaType:{previews:["antiope"]}}],listForSuite:["GET /repos/{owner}/{repo}/check-suites/{check_suite_id}/check-runs",{mediaType:{previews:["antiope"]}}],listSuitesForRef:["GET /repos/{owner}/{repo}/commits/{ref}/check-suites",{mediaType:{previews:["antiope"]}}],rerequestSuite:["POST /repos/{owner}/{repo}/check-suites/{check_suite_id}/rerequest",{mediaType:{previews:["antiope"]}}],setSuitesPreferences:["PATCH /repos/{owner}/{repo}/check-suites/preferences",{mediaType:{previews:["antiope"]}}],update:["PATCH /repos/{owner}/{repo}/check-runs/{check_run_id}",{mediaType:{previews:["antiope"]}}]},codeScanning:{getAlert:["GET /repos/{owner}/{repo}/code-scanning/alerts/{alert_id}"],listAlertsForRepo:["GET /repos/{owner}/{repo}/code-scanning/alerts"]},codesOfConduct:{getAllCodesOfConduct:["GET /codes_of_conduct",{mediaType:{previews:["scarlet-witch"]}}],getConductCode:["GET /codes_of_conduct/{key}",{mediaType:{previews:["scarlet-witch"]}}],getForRepo:["GET /repos/{owner}/{repo}/community/code_of_conduct",{mediaType:{previews:["scarlet-witch"]}}],listConductCodes:["GET /codes_of_conduct",{mediaType:{previews:["scarlet-witch"]}},{renamed:["codesOfConduct","getAllCodesOfConduct"]}]},emojis:{get:["GET /emojis"]},gists:{checkIsStarred:["GET /gists/{gist_id}/star"],create:["POST /gists"],createComment:["POST /gists/{gist_id}/comments"],delete:["DELETE /gists/{gist_id}"],deleteComment:["DELETE /gists/{gist_id}/comments/{comment_id}"],fork:["POST /gists/{gist_id}/forks"],get:["GET /gists/{gist_id}"],getComment:["GET /gists/{gist_id}/comments/{comment_id}"],getRevision:["GET /gists/{gist_id}/{sha}"],list:["GET /gists"],listComments:["GET /gists/{gist_id}/comments"],listCommits:["GET /gists/{gist_id}/commits"],listForUser:["GET /users/{username}/gists"],listForks:["GET /gists/{gist_id}/forks"],listPublic:["GET /gists/public"],listPublicForUser:["GET /users/{username}/gists",{},{renamed:["gists","listForUser"]}],listStarred:["GET /gists/starred"],star:["PUT /gists/{gist_id}/star"],unstar:["DELETE /gists/{gist_id}/star"],update:["PATCH /gists/{gist_id}"],updateComment:["PATCH /gists/{gist_id}/comments/{comment_id}"]},git:{createBlob:["POST /repos/{owner}/{repo}/git/blobs"],createCommit:["POST /repos/{owner}/{repo}/git/commits"],createRef:["POST /repos/{owner}/{repo}/git/refs"],createTag:["POST /repos/{owner}/{repo}/git/tags"],createTree:["POST /repos/{owner}/{repo}/git/trees"],deleteRef:["DELETE /repos/{owner}/{repo}/git/refs/{ref}"],getBlob:["GET /repos/{owner}/{repo}/git/blobs/{file_sha}"],getCommit:["GET /repos/{owner}/{repo}/git/commits/{commit_sha}"],getRef:["GET /repos/{owner}/{repo}/git/ref/{ref}"],getTag:["GET /repos/{owner}/{repo}/git/tags/{tag_sha}"],getTree:["GET /repos/{owner}/{repo}/git/trees/{tree_sha}"],listMatchingRefs:["GET /repos/{owner}/{repo}/git/matching-refs/{ref}"],updateRef:["PATCH /repos/{owner}/{repo}/git/refs/{ref}"]},gitignore:{getAllTemplates:["GET /gitignore/templates"],getTemplate:["GET /gitignore/templates/{name}"],listTemplates:["GET /gitignore/templates",{},{renamed:["gitignore","getAllTemplates"]}]},interactions:{addOrUpdateRestrictionsForOrg:["PUT /orgs/{org}/interaction-limits",{mediaType:{previews:["sombra"]}},{renamed:["interactions","setRestrictionsForOrg"]}],addOrUpdateRestrictionsForRepo:["PUT /repos/{owner}/{repo}/interaction-limits",{mediaType:{previews:["sombra"]}},{renamed:["interactions","setRestrictionsForRepo"]}],getRestrictionsForOrg:["GET /orgs/{org}/interaction-limits",{mediaType:{previews:["sombra"]}}],getRestrictionsForRepo:["GET /repos/{owner}/{repo}/interaction-limits",{mediaType:{previews:["sombra"]}}],removeRestrictionsForOrg:["DELETE /orgs/{org}/interaction-limits",{mediaType:{previews:["sombra"]}}],removeRestrictionsForRepo:["DELETE /repos/{owner}/{repo}/interaction-limits",{mediaType:{previews:["sombra"]}}],setRestrictionsForOrg:["PUT /orgs/{org}/interaction-limits",{mediaType:{previews:["sombra"]}}],setRestrictionsForRepo:["PUT /repos/{owner}/{repo}/interaction-limits",{mediaType:{previews:["sombra"]}}]},issues:{addAssignees:["POST /repos/{owner}/{repo}/issues/{issue_number}/assignees"],addLabels:["POST /repos/{owner}/{repo}/issues/{issue_number}/labels"],checkAssignee:["GET /repos/{owner}/{repo}/assignees/{assignee}",{},{renamed:["issues","checkUserCanBeAssigned"]}],checkUserCanBeAssigned:["GET /repos/{owner}/{repo}/assignees/{assignee}"],create:["POST /repos/{owner}/{repo}/issues"],createComment:["POST /repos/{owner}/{repo}/issues/{issue_number}/comments"],createLabel:["POST /repos/{owner}/{repo}/labels"],createMilestone:["POST /repos/{owner}/{repo}/milestones"],deleteComment:["DELETE /repos/{owner}/{repo}/issues/comments/{comment_id}"],deleteLabel:["DELETE /repos/{owner}/{repo}/labels/{name}"],deleteMilestone:["DELETE /repos/{owner}/{repo}/milestones/{milestone_number}"],get:["GET /repos/{owner}/{repo}/issues/{issue_number}"],getComment:["GET /repos/{owner}/{repo}/issues/comments/{comment_id}"],getEvent:["GET /repos/{owner}/{repo}/issues/events/{event_id}"],getLabel:["GET /repos/{owner}/{repo}/labels/{name}"],getMilestone:["GET /repos/{owner}/{repo}/milestones/{milestone_number}"],list:["GET /issues"],listAssignees:["GET /repos/{owner}/{repo}/assignees"],listComments:["GET /repos/{owner}/{repo}/issues/{issue_number}/comments"],listCommentsForRepo:["GET /repos/{owner}/{repo}/issues/comments"],listEvents:["GET /repos/{owner}/{repo}/issues/{issue_number}/events"],listEventsForRepo:["GET /repos/{owner}/{repo}/issues/events"],listEventsForTimeline:["GET /repos/{owner}/{repo}/issues/{issue_number}/timeline",{mediaType:{previews:["mockingbird"]}}],listForAuthenticatedUser:["GET /user/issues"],listForOrg:["GET /orgs/{org}/issues"],listForRepo:["GET /repos/{owner}/{repo}/issues"],listLabelsForMilestone:["GET /repos/{owner}/{repo}/milestones/{milestone_number}/labels"],listLabelsForRepo:["GET /repos/{owner}/{repo}/labels"],listLabelsOnIssue:["GET /repos/{owner}/{repo}/issues/{issue_number}/labels"],listMilestones:["GET /repos/{owner}/{repo}/milestones"],listMilestonesForRepo:["GET /repos/{owner}/{repo}/milestones",{},{renamed:["issues","listMilestones"]}],lock:["PUT /repos/{owner}/{repo}/issues/{issue_number}/lock"],removeAllLabels:["DELETE /repos/{owner}/{repo}/issues/{issue_number}/labels"],removeAssignees:["DELETE /repos/{owner}/{repo}/issues/{issue_number}/assignees"],removeLabel:["DELETE /repos/{owner}/{repo}/issues/{issue_number}/labels/{name}"],removeLabels:["DELETE /repos/{owner}/{repo}/issues/{issue_number}/labels",{},{renamed:["issues","removeAllLabels"]}],replaceAllLabels:["PUT /repos/{owner}/{repo}/issues/{issue_number}/labels",{},{renamed:["issues","setLabels"]}],replaceLabels:["PUT /repos/{owner}/{repo}/issues/{issue_number}/labels",{},{renamed:["issues","replaceAllLabels"]}],setLabels:["PUT /repos/{owner}/{repo}/issues/{issue_number}/labels"],unlock:["DELETE /repos/{owner}/{repo}/issues/{issue_number}/lock"],update:["PATCH /repos/{owner}/{repo}/issues/{issue_number}"],updateComment:["PATCH /repos/{owner}/{repo}/issues/comments/{comment_id}"],updateLabel:["PATCH /repos/{owner}/{repo}/labels/{name}"],updateMilestone:["PATCH /repos/{owner}/{repo}/milestones/{milestone_number}"]},licenses:{get:["GET /licenses/{license}"],getAllCommonlyUsed:["GET /licenses"],getForRepo:["GET /repos/{owner}/{repo}/license"],listCommonlyUsed:["GET /licenses",{},{renamed:["licenses","getAllCommonlyUsed"]}]},markdown:{render:["POST /markdown"],renderRaw:["POST /markdown/raw",{headers:{"content-type":"text/plain; charset=utf-8"}}]},meta:{get:["GET /meta"]},migrations:{cancelImport:["DELETE /repos/{owner}/{repo}/import"],deleteArchiveForAuthenticatedUser:["DELETE /user/migrations/{migration_id}/archive",{mediaType:{previews:["wyandotte"]}}],deleteArchiveForOrg:["DELETE /orgs/{org}/migrations/{migration_id}/archive",{mediaType:{previews:["wyandotte"]}}],downloadArchiveForOrg:["GET /orgs/{org}/migrations/{migration_id}/archive",{mediaType:{previews:["wyandotte"]}}],getArchiveForAuthenticatedUser:["GET /user/migrations/{migration_id}/archive",{mediaType:{previews:["wyandotte"]}}],getCommitAuthors:["GET /repos/{owner}/{repo}/import/authors"],getImportProgress:["GET /repos/{owner}/{repo}/import",{},{renamed:["migrations","getImportStatus"]}],getImportStatus:["GET /repos/{owner}/{repo}/import"],getLargeFiles:["GET /repos/{owner}/{repo}/import/large_files"],getStatusForAuthenticatedUser:["GET /user/migrations/{migration_id}",{mediaType:{previews:["wyandotte"]}}],getStatusForOrg:["GET /orgs/{org}/migrations/{migration_id}",{mediaType:{previews:["wyandotte"]}}],listForAuthenticatedUser:["GET /user/migrations",{mediaType:{previews:["wyandotte"]}}],listForOrg:["GET /orgs/{org}/migrations",{mediaType:{previews:["wyandotte"]}}],listReposForOrg:["GET /orgs/{org}/migrations/{migration_id}/repositories",{mediaType:{previews:["wyandotte"]}}],listReposForUser:["GET /user/{migration_id}/repositories",{mediaType:{previews:["wyandotte"]}}],mapCommitAuthor:["PATCH /repos/{owner}/{repo}/import/authors/{author_id}"],setLfsPreference:["PATCH /repos/{owner}/{repo}/import/lfs"],startForAuthenticatedUser:["POST /user/migrations"],startForOrg:["POST /orgs/{org}/migrations"],startImport:["PUT /repos/{owner}/{repo}/import"],unlockRepoForAuthenticatedUser:["DELETE /user/migrations/{migration_id}/repos/{repo_name}/lock",{mediaType:{previews:["wyandotte"]}}],unlockRepoForOrg:["DELETE /orgs/{org}/migrations/{migration_id}/repos/{repo_name}/lock",{mediaType:{previews:["wyandotte"]}}],updateImport:["PATCH /repos/{owner}/{repo}/import"]},orgs:{addOrUpdateMembership:["PUT /orgs/{org}/memberships/{username}",{},{renamed:["orgs","setMembershipForUser"]}],blockUser:["PUT /orgs/{org}/blocks/{username}"],checkBlockedUser:["GET /orgs/{org}/blocks/{username}"],checkMembership:["GET /orgs/{org}/members/{username}",{},{renamed:["orgs","checkMembershipForUser"]}],checkMembershipForUser:["GET /orgs/{org}/members/{username}"],checkPublicMembership:["GET /orgs/{org}/public_members/{username}",{},{renamed:["orgs","checkPublicMembershipForUser"]}],checkPublicMembershipForUser:["GET /orgs/{org}/public_members/{username}"],concealMembership:["DELETE /orgs/{org}/public_members/{username}",{},{renamed:["orgs","removePublicMembershipForAuthenticatedUser"]}],convertMemberToOutsideCollaborator:["PUT /orgs/{org}/outside_collaborators/{username}"],createHook:["POST /orgs/{org}/hooks",{},{renamed:["orgs","createWebhook"]}],createInvitation:["POST /orgs/{org}/invitations"],createWebhook:["POST /orgs/{org}/hooks"],deleteHook:["DELETE /orgs/{org}/hooks/{hook_id}",{},{renamed:["orgs","deleteWebhook"]}],deleteWebhook:["DELETE /orgs/{org}/hooks/{hook_id}"],get:["GET /orgs/{org}"],getHook:["GET /orgs/{org}/hooks/{hook_id}",{},{renamed:["orgs","getWebhook"]}],getMembership:["GET /orgs/{org}/memberships/{username}",{},{renamed:["orgs","getMembershipForUser"]}],getMembershipForAuthenticatedUser:["GET /user/memberships/orgs/{org}"],getMembershipForUser:["GET /orgs/{org}/memberships/{username}"],getWebhook:["GET /orgs/{org}/hooks/{hook_id}"],list:["GET /organizations"],listAppInstallations:["GET /orgs/{org}/installations",{mediaType:{previews:["machine-man"]}}],listBlockedUsers:["GET /orgs/{org}/blocks"],listForAuthenticatedUser:["GET /user/orgs"],listForUser:["GET /users/{username}/orgs"],listHooks:["GET /orgs/{org}/hooks",{},{renamed:["orgs","listWebhooks"]}],listInstallations:["GET /orgs/{org}/installations",{mediaType:{previews:["machine-man"]}},{renamed:["orgs","listAppInstallations"]}],listInvitationTeams:["GET /orgs/{org}/invitations/{invitation_id}/teams"],listMembers:["GET /orgs/{org}/members"],listMemberships:["GET /user/memberships/orgs",{},{renamed:["orgs","listMembershipsForAuthenticatedUser"]}],listMembershipsForAuthenticatedUser:["GET /user/memberships/orgs"],listOutsideCollaborators:["GET /orgs/{org}/outside_collaborators"],listPendingInvitations:["GET /orgs/{org}/invitations"],listPublicMembers:["GET /orgs/{org}/public_members"],listWebhooks:["GET /orgs/{org}/hooks"],pingHook:["POST /orgs/{org}/hooks/{hook_id}/pings",{},{renamed:["orgs","pingWebhook"]}],pingWebhook:["POST /orgs/{org}/hooks/{hook_id}/pings"],publicizeMembership:["PUT /orgs/{org}/public_members/{username}",{},{renamed:["orgs","setPublicMembershipForAuthenticatedUser"]}],removeMember:["DELETE /orgs/{org}/members/{username}"],removeMembership:["DELETE /orgs/{org}/memberships/{username}",{},{renamed:["orgs","removeMembershipForUser"]}],removeMembershipForUser:["DELETE /orgs/{org}/memberships/{username}"],removeOutsideCollaborator:["DELETE /orgs/{org}/outside_collaborators/{username}"],removePublicMembershipForAuthenticatedUser:["DELETE /orgs/{org}/public_members/{username}"],setMembershipForUser:["PUT /orgs/{org}/memberships/{username}"],setPublicMembershipForAuthenticatedUser:["PUT /orgs/{org}/public_members/{username}"],unblockUser:["DELETE /orgs/{org}/blocks/{username}"],update:["PATCH /orgs/{org}"],updateHook:["PATCH /orgs/{org}/hooks/{hook_id}",{},{renamed:["orgs","updateWebhook"]}],updateMembership:["PATCH /user/memberships/orgs/{org}",{},{renamed:["orgs","updateMembershipForAuthenticatedUser"]}],updateMembershipForAuthenticatedUser:["PATCH /user/memberships/orgs/{org}"],updateWebhook:["PATCH /orgs/{org}/hooks/{hook_id}"]},projects:{addCollaborator:["PUT /projects/{project_id}/collaborators/{username}",{mediaType:{previews:["inertia"]}}],createCard:["POST /projects/columns/{column_id}/cards",{mediaType:{previews:["inertia"]}}],createColumn:["POST /projects/{project_id}/columns",{mediaType:{previews:["inertia"]}}],createForAuthenticatedUser:["POST /user/projects",{mediaType:{previews:["inertia"]}}],createForOrg:["POST /orgs/{org}/projects",{mediaType:{previews:["inertia"]}}],createForRepo:["POST /repos/{owner}/{repo}/projects",{mediaType:{previews:["inertia"]}}],delete:["DELETE /projects/{project_id}",{mediaType:{previews:["inertia"]}}],deleteCard:["DELETE /projects/columns/cards/{card_id}",{mediaType:{previews:["inertia"]}}],deleteColumn:["DELETE /projects/columns/{column_id}",{mediaType:{previews:["inertia"]}}],get:["GET /projects/{project_id}",{mediaType:{previews:["inertia"]}}],getCard:["GET /projects/columns/cards/{card_id}",{mediaType:{previews:["inertia"]}}],getColumn:["GET /projects/columns/{column_id}",{mediaType:{previews:["inertia"]}}],getPermissionForUser:["GET /projects/{project_id}/collaborators/{username}/permission",{mediaType:{previews:["inertia"]}}],listCards:["GET /projects/columns/{column_id}/cards",{mediaType:{previews:["inertia"]}}],listCollaborators:["GET /projects/{project_id}/collaborators",{mediaType:{previews:["inertia"]}}],listColumns:["GET /projects/{project_id}/columns",{mediaType:{previews:["inertia"]}}],listForOrg:["GET /orgs/{org}/projects",{mediaType:{previews:["inertia"]}}],listForRepo:["GET /repos/{owner}/{repo}/projects",{mediaType:{previews:["inertia"]}}],listForUser:["GET /users/{username}/projects",{mediaType:{previews:["inertia"]}}],moveCard:["POST /projects/columns/cards/{card_id}/moves",{mediaType:{previews:["inertia"]}}],moveColumn:["POST /projects/columns/{column_id}/moves",{mediaType:{previews:["inertia"]}}],removeCollaborator:["DELETE /projects/{project_id}/collaborators/{username}",{mediaType:{previews:["inertia"]}}],reviewUserPermissionLevel:["GET /projects/{project_id}/collaborators/{username}/permission",{mediaType:{previews:["inertia"]}},{renamed:["projects","getPermissionForUser"]}],update:["PATCH /projects/{project_id}",{mediaType:{previews:["inertia"]}}],updateCard:["PATCH /projects/columns/cards/{card_id}",{mediaType:{previews:["inertia"]}}],updateColumn:["PATCH /projects/columns/{column_id}",{mediaType:{previews:["inertia"]}}]},pulls:{checkIfMerged:["GET /repos/{owner}/{repo}/pulls/{pull_number}/merge"],create:["POST /repos/{owner}/{repo}/pulls"],createComment:["POST /repos/{owner}/{repo}/pulls/{pull_number}/comments",{},{renamed:["pulls","createReviewComment"]}],createReplyForReviewComment:["POST /repos/{owner}/{repo}/pulls/{pull_number}/comments/{comment_id}/replies"],createReview:["POST /repos/{owner}/{repo}/pulls/{pull_number}/reviews"],createReviewComment:["POST /repos/{owner}/{repo}/pulls/{pull_number}/comments"],createReviewCommentReply:["POST /repos/{owner}/{repo}/pulls/{pull_number}/comments/{comment_id}/replies",{},{renamed:["pulls","createReplyForReviewComment"]}],createReviewRequest:["POST /repos/{owner}/{repo}/pulls/{pull_number}/requested_reviewers",{},{renamed:["pulls","requestReviewers"]}],deleteComment:["DELETE /repos/{owner}/{repo}/pulls/comments/{comment_id}",{},{renamed:["pulls","deleteReviewComment"]}],deletePendingReview:["DELETE /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}"],deleteReviewComment:["DELETE /repos/{owner}/{repo}/pulls/comments/{comment_id}"],deleteReviewRequest:["DELETE /repos/{owner}/{repo}/pulls/{pull_number}/requested_reviewers",{},{renamed:["pulls","removeRequestedReviewers"]}],dismissReview:["PUT /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}/dismissals"],get:["GET /repos/{owner}/{repo}/pulls/{pull_number}"],getComment:["GET /repos/{owner}/{repo}/pulls/comments/{comment_id}",{},{renamed:["pulls","getReviewComment"]}],getCommentsForReview:["GET /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}/comments",{},{renamed:["pulls","listCommentsForReview"]}],getReview:["GET /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}"],getReviewComment:["GET /repos/{owner}/{repo}/pulls/comments/{comment_id}"],list:["GET /repos/{owner}/{repo}/pulls"],listComments:["GET /repos/{owner}/{repo}/pulls/{pull_number}/comments",{},{renamed:["pulls","listReviewComments"]}],listCommentsForRepo:["GET /repos/{owner}/{repo}/pulls/comments",{},{renamed:["pulls","listReviewCommentsForRepo"]}],listCommentsForReview:["GET /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}/comments"],listCommits:["GET /repos/{owner}/{repo}/pulls/{pull_number}/commits"],listFiles:["GET /repos/{owner}/{repo}/pulls/{pull_number}/files"],listRequestedReviewers:["GET /repos/{owner}/{repo}/pulls/{pull_number}/requested_reviewers"],listReviewComments:["GET /repos/{owner}/{repo}/pulls/{pull_number}/comments"],listReviewCommentsForRepo:["GET /repos/{owner}/{repo}/pulls/comments"],listReviewRequests:["GET /repos/{owner}/{repo}/pulls/{pull_number}/requested_reviewers",{},{renamed:["pulls","listRequestedReviewers"]}],listReviews:["GET /repos/{owner}/{repo}/pulls/{pull_number}/reviews"],merge:["PUT /repos/{owner}/{repo}/pulls/{pull_number}/merge"],removeRequestedReviewers:["DELETE /repos/{owner}/{repo}/pulls/{pull_number}/requested_reviewers"],requestReviewers:["POST /repos/{owner}/{repo}/pulls/{pull_number}/requested_reviewers"],submitReview:["POST /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}/events"],update:["PATCH /repos/{owner}/{repo}/pulls/{pull_number}"],updateBranch:["PUT /repos/{owner}/{repo}/pulls/{pull_number}/update-branch",{mediaType:{previews:["lydian"]}}],updateComment:["PATCH /repos/{owner}/{repo}/pulls/comments/{comment_id}",{},{renamed:["pulls","updateReviewComment"]}],updateReview:["PUT /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}"],updateReviewComment:["PATCH /repos/{owner}/{repo}/pulls/comments/{comment_id}"]},rateLimit:{get:["GET /rate_limit"]},reactions:{createForCommitComment:["POST /repos/{owner}/{repo}/comments/{comment_id}/reactions",{mediaType:{previews:["squirrel-girl"]}}],createForIssue:["POST /repos/{owner}/{repo}/issues/{issue_number}/reactions",{mediaType:{previews:["squirrel-girl"]}}],createForIssueComment:["POST /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions",{mediaType:{previews:["squirrel-girl"]}}],createForPullRequestReviewComment:["POST /repos/{owner}/{repo}/pulls/comments/{comment_id}/reactions",{mediaType:{previews:["squirrel-girl"]}}],createForTeamDiscussionCommentInOrg:["POST /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}/reactions",{mediaType:{previews:["squirrel-girl"]}}],createForTeamDiscussionInOrg:["POST /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/reactions",{mediaType:{previews:["squirrel-girl"]}}],delete:["DELETE /reactions/{reaction_id}",{mediaType:{previews:["squirrel-girl"]}},{renamed:["reactions","deleteLegacy"]}],deleteForCommitComment:["DELETE /repos/{owner}/{repo}/comments/{comment_id}/reactions/{reaction_id}",{mediaType:{previews:["squirrel-girl"]}}],deleteForIssue:["DELETE /repos/{owner}/{repo}/issues/{issue_number}/reactions/{reaction_id}",{mediaType:{previews:["squirrel-girl"]}}],deleteForIssueComment:["DELETE /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions/{reaction_id}",{mediaType:{previews:["squirrel-girl"]}}],deleteForPullRequestComment:["DELETE /repos/{owner}/{repo}/pulls/comments/{comment_id}/reactions/{reaction_id}",{mediaType:{previews:["squirrel-girl"]}}],deleteForTeamDiscussion:["DELETE /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/reactions/{reaction_id}",{mediaType:{previews:["squirrel-girl"]}}],deleteForTeamDiscussionComment:["DELETE /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}/reactions/{reaction_id}",{mediaType:{previews:["squirrel-girl"]}}],deleteLegacy:["DELETE /reactions/{reaction_id}",{mediaType:{previews:["squirrel-girl"]}},{deprecated:"octokit.reactions.deleteLegacy() is deprecated, see https://developer.github.com/v3/reactions/#delete-a-reaction-legacy"}],listForCommitComment:["GET /repos/{owner}/{repo}/comments/{comment_id}/reactions",{mediaType:{previews:["squirrel-girl"]}}],listForIssue:["GET /repos/{owner}/{repo}/issues/{issue_number}/reactions",{mediaType:{previews:["squirrel-girl"]}}],listForIssueComment:["GET /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions",{mediaType:{previews:["squirrel-girl"]}}],listForPullRequestReviewComment:["GET /repos/{owner}/{repo}/pulls/comments/{comment_id}/reactions",{mediaType:{previews:["squirrel-girl"]}}],listForTeamDiscussionCommentInOrg:["GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}/reactions",{mediaType:{previews:["squirrel-girl"]}}],listForTeamDiscussionInOrg:["GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/reactions",{mediaType:{previews:["squirrel-girl"]}}]},repos:{acceptInvitation:["PATCH /user/repository_invitations/{invitation_id}"],addAppAccessRestrictions:["POST /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/apps",{},{mapToData:"apps"}],addCollaborator:["PUT /repos/{owner}/{repo}/collaborators/{username}"],addDeployKey:["POST /repos/{owner}/{repo}/keys",{},{renamed:["repos","createDeployKey"]}],addProtectedBranchAdminEnforcement:["POST /repos/{owner}/{repo}/branches/{branch}/protection/enforce_admins",{},{renamed:["repos","setAdminBranchProtection"]}],addProtectedBranchAppRestrictions:["POST /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/apps",{},{mapToData:"apps",renamed:["repos","addAppAccessRestrictions"]}],addProtectedBranchRequiredSignatures:["POST /repos/{owner}/{repo}/branches/{branch}/protection/required_signatures",{mediaType:{previews:["zzzax"]}},{renamed:["repos","createCommitSignatureProtection"]}],addProtectedBranchRequiredStatusChecksContexts:["POST /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts",{},{mapToData:"contexts",renamed:["repos","addStatusCheckContexts"]}],addProtectedBranchTeamRestrictions:["POST /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams",{},{mapToData:"teams",renamed:["repos","addTeamAccessRestrictions"]}],addProtectedBranchUserRestrictions:["POST /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users",{},{mapToData:"users",renamed:["repos","addUserAccessRestrictions"]}],addStatusCheckContexts:["POST /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts",{},{mapToData:"contexts"}],addTeamAccessRestrictions:["POST /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams",{},{mapToData:"teams"}],addUserAccessRestrictions:["POST /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users",{},{mapToData:"users"}],checkCollaborator:["GET /repos/{owner}/{repo}/collaborators/{username}"],checkVulnerabilityAlerts:["GET /repos/{owner}/{repo}/vulnerability-alerts",{mediaType:{previews:["dorian"]}}],compareCommits:["GET /repos/{owner}/{repo}/compare/{base}...{head}"],createCommitComment:["POST /repos/{owner}/{repo}/commits/{commit_sha}/comments"],createCommitSignatureProtection:["POST /repos/{owner}/{repo}/branches/{branch}/protection/required_signatures",{mediaType:{previews:["zzzax"]}}],createCommitStatus:["POST /repos/{owner}/{repo}/statuses/{sha}"],createDeployKey:["POST /repos/{owner}/{repo}/keys"],createDeployment:["POST /repos/{owner}/{repo}/deployments"],createDeploymentStatus:["POST /repos/{owner}/{repo}/deployments/{deployment_id}/statuses"],createDispatchEvent:["POST /repos/{owner}/{repo}/dispatches"],createForAuthenticatedUser:["POST /user/repos"],createFork:["POST /repos/{owner}/{repo}/forks"],createHook:["POST /repos/{owner}/{repo}/hooks",{},{renamed:["repos","createWebhook"]}],createInOrg:["POST /orgs/{org}/repos"],createOrUpdateFile:["PUT /repos/{owner}/{repo}/contents/{path}",{},{renamed:["repos","createOrUpdateFileContents"]}],createOrUpdateFileContents:["PUT /repos/{owner}/{repo}/contents/{path}"],createPagesSite:["POST /repos/{owner}/{repo}/pages",{mediaType:{previews:["switcheroo"]}}],createRelease:["POST /repos/{owner}/{repo}/releases"],createStatus:["POST /repos/{owner}/{repo}/statuses/{sha}",{},{renamed:["repos","createCommitStatus"]}],createUsingTemplate:["POST /repos/{template_owner}/{template_repo}/generate",{mediaType:{previews:["baptiste"]}}],createWebhook:["POST /repos/{owner}/{repo}/hooks"],declineInvitation:["DELETE /user/repository_invitations/{invitation_id}"],delete:["DELETE /repos/{owner}/{repo}"],deleteAccessRestrictions:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/restrictions"],deleteAdminBranchProtection:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/enforce_admins"],deleteBranchProtection:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection"],deleteCommitComment:["DELETE /repos/{owner}/{repo}/comments/{comment_id}"],deleteCommitSignatureProtection:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/required_signatures",{mediaType:{previews:["zzzax"]}}],deleteDeployKey:["DELETE /repos/{owner}/{repo}/keys/{key_id}"],deleteDeployment:["DELETE /repos/{owner}/{repo}/deployments/{deployment_id}"],deleteDownload:["DELETE /repos/{owner}/{repo}/downloads/{download_id}"],deleteFile:["DELETE /repos/{owner}/{repo}/contents/{path}"],deleteHook:["DELETE /repos/{owner}/{repo}/hooks/{hook_id}",{},{renamed:["repos","deleteWebhook"]}],deleteInvitation:["DELETE /repos/{owner}/{repo}/invitations/{invitation_id}"],deletePagesSite:["DELETE /repos/{owner}/{repo}/pages",{mediaType:{previews:["switcheroo"]}}],deletePullRequestReviewProtection:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/required_pull_request_reviews"],deleteRelease:["DELETE /repos/{owner}/{repo}/releases/{release_id}"],deleteReleaseAsset:["DELETE /repos/{owner}/{repo}/releases/assets/{asset_id}"],deleteWebhook:["DELETE /repos/{owner}/{repo}/hooks/{hook_id}"],disableAutomatedSecurityFixes:["DELETE /repos/{owner}/{repo}/automated-security-fixes",{mediaType:{previews:["london"]}}],disablePagesSite:["DELETE /repos/{owner}/{repo}/pages",{mediaType:{previews:["switcheroo"]}},{renamed:["repos","deletePagesSite"]}],disableVulnerabilityAlerts:["DELETE /repos/{owner}/{repo}/vulnerability-alerts",{mediaType:{previews:["dorian"]}}],downloadArchive:["GET /repos/{owner}/{repo}/{archive_format}/{ref}"],enableAutomatedSecurityFixes:["PUT /repos/{owner}/{repo}/automated-security-fixes",{mediaType:{previews:["london"]}}],enablePagesSite:["POST /repos/{owner}/{repo}/pages",{mediaType:{previews:["switcheroo"]}},{renamed:["repos","createPagesSite"]}],enableVulnerabilityAlerts:["PUT /repos/{owner}/{repo}/vulnerability-alerts",{mediaType:{previews:["dorian"]}}],get:["GET /repos/{owner}/{repo}"],getAccessRestrictions:["GET /repos/{owner}/{repo}/branches/{branch}/protection/restrictions"],getAdminBranchProtection:["GET /repos/{owner}/{repo}/branches/{branch}/protection/enforce_admins"],getAllStatusCheckContexts:["GET /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts"],getAllTopics:["GET /repos/{owner}/{repo}/topics",{mediaType:{previews:["mercy"]}}],getAppsWithAccessToProtectedBranch:["GET /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/apps"],getArchiveLink:["GET /repos/{owner}/{repo}/{archive_format}/{ref}",{},{renamed:["repos","downloadArchive"]}],getBranch:["GET /repos/{owner}/{repo}/branches/{branch}"],getBranchProtection:["GET /repos/{owner}/{repo}/branches/{branch}/protection"],getClones:["GET /repos/{owner}/{repo}/traffic/clones"],getCodeFrequencyStats:["GET /repos/{owner}/{repo}/stats/code_frequency"],getCollaboratorPermissionLevel:["GET /repos/{owner}/{repo}/collaborators/{username}/permission"],getCombinedStatusForRef:["GET /repos/{owner}/{repo}/commits/{ref}/status"],getCommit:["GET /repos/{owner}/{repo}/commits/{ref}"],getCommitActivityStats:["GET /repos/{owner}/{repo}/stats/commit_activity"],getCommitComment:["GET /repos/{owner}/{repo}/comments/{comment_id}"],getCommitSignatureProtection:["GET /repos/{owner}/{repo}/branches/{branch}/protection/required_signatures",{mediaType:{previews:["zzzax"]}}],getCommunityProfileMetrics:["GET /repos/{owner}/{repo}/community/profile"],getContent:["GET /repos/{owner}/{repo}/contents/{path}"],getContents:["GET /repos/{owner}/{repo}/contents/{path}",{},{renamed:["repos","getContent"]}],getContributorsStats:["GET /repos/{owner}/{repo}/stats/contributors"],getDeployKey:["GET /repos/{owner}/{repo}/keys/{key_id}"],getDeployment:["GET /repos/{owner}/{repo}/deployments/{deployment_id}"],getDeploymentStatus:["GET /repos/{owner}/{repo}/deployments/{deployment_id}/statuses/{status_id}"],getDownload:["GET /repos/{owner}/{repo}/downloads/{download_id}"],getHook:["GET /repos/{owner}/{repo}/hooks/{hook_id}",{},{renamed:["repos","getWebhook"]}],getLatestPagesBuild:["GET /repos/{owner}/{repo}/pages/builds/latest"],getLatestRelease:["GET /repos/{owner}/{repo}/releases/latest"],getPages:["GET /repos/{owner}/{repo}/pages"],getPagesBuild:["GET /repos/{owner}/{repo}/pages/builds/{build_id}"],getParticipationStats:["GET /repos/{owner}/{repo}/stats/participation"],getProtectedBranchAdminEnforcement:["GET /repos/{owner}/{repo}/branches/{branch}/protection/enforce_admins",{},{renamed:["repos","getAdminBranchProtection"]}],getProtectedBranchPullRequestReviewEnforcement:["GET /repos/{owner}/{repo}/branches/{branch}/protection/required_pull_request_reviews",{},{renamed:["repos","getPullRequestReviewProtection"]}],getProtectedBranchRequiredSignatures:["GET /repos/{owner}/{repo}/branches/{branch}/protection/required_signatures",{mediaType:{previews:["zzzax"]}},{renamed:["repos","getCommitSignatureProtection"]}],getProtectedBranchRequiredStatusChecks:["GET /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks",{},{renamed:["repos","getStatusChecksProtection"]}],getProtectedBranchRestrictions:["GET /repos/{owner}/{repo}/branches/{branch}/protection/restrictions",{},{renamed:["repos","getAccessRestrictions"]}],getPullRequestReviewProtection:["GET /repos/{owner}/{repo}/branches/{branch}/protection/required_pull_request_reviews"],getPunchCardStats:["GET /repos/{owner}/{repo}/stats/punch_card"],getReadme:["GET /repos/{owner}/{repo}/readme"],getRelease:["GET /repos/{owner}/{repo}/releases/{release_id}"],getReleaseAsset:["GET /repos/{owner}/{repo}/releases/assets/{asset_id}"],getReleaseByTag:["GET /repos/{owner}/{repo}/releases/tags/{tag}"],getStatusChecksProtection:["GET /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks"],getTeamsWithAccessToProtectedBranch:["GET /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams"],getTopPaths:["GET /repos/{owner}/{repo}/traffic/popular/paths"],getTopReferrers:["GET /repos/{owner}/{repo}/traffic/popular/referrers"],getUsersWithAccessToProtectedBranch:["GET /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users"],getViews:["GET /repos/{owner}/{repo}/traffic/views"],getWebhook:["GET /repos/{owner}/{repo}/hooks/{hook_id}"],list:["GET /user/repos",{},{renamed:["repos","listForAuthenticatedUser"]}],listAssetsForRelease:["GET /repos/{owner}/{repo}/releases/{release_id}/assets",{},{renamed:["repos","listReleaseAssets"]}],listBranches:["GET /repos/{owner}/{repo}/branches"],listBranchesForHeadCommit:["GET /repos/{owner}/{repo}/commits/{commit_sha}/branches-where-head",{mediaType:{previews:["groot"]}}],listCollaborators:["GET /repos/{owner}/{repo}/collaborators"],listCommentsForCommit:["GET /repos/{owner}/{repo}/commits/{commit_sha}/comments"],listCommitComments:["GET /repos/{owner}/{repo}/comments",{},{renamed:["repos","listCommitCommentsForRepo"]}],listCommitCommentsForRepo:["GET /repos/{owner}/{repo}/comments"],listCommitStatusesForRef:["GET /repos/{owner}/{repo}/commits/{ref}/statuses"],listCommits:["GET /repos/{owner}/{repo}/commits"],listContributors:["GET /repos/{owner}/{repo}/contributors"],listDeployKeys:["GET /repos/{owner}/{repo}/keys"],listDeploymentStatuses:["GET /repos/{owner}/{repo}/deployments/{deployment_id}/statuses"],listDeployments:["GET /repos/{owner}/{repo}/deployments"],listDownloads:["GET /repos/{owner}/{repo}/downloads"],listForAuthenticatedUser:["GET /user/repos"],listForOrg:["GET /orgs/{org}/repos"],listForUser:["GET /users/{username}/repos"],listForks:["GET /repos/{owner}/{repo}/forks"],listHooks:["GET /repos/{owner}/{repo}/hooks",{},{renamed:["repos","listWebhooks"]}],listInvitations:["GET /repos/{owner}/{repo}/invitations"],listInvitationsForAuthenticatedUser:["GET /user/repository_invitations"],listLanguages:["GET /repos/{owner}/{repo}/languages"],listPagesBuilds:["GET /repos/{owner}/{repo}/pages/builds"],listProtectedBranchRequiredStatusChecksContexts:["GET /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts",{},{renamed:["repos","getAllStatusCheckContexts"]}],listPublic:["GET /repositories"],listPullRequestsAssociatedWithCommit:["GET /repos/{owner}/{repo}/commits/{commit_sha}/pulls",{mediaType:{previews:["groot"]}}],listReleaseAssets:["GET /repos/{owner}/{repo}/releases/{release_id}/assets"],listReleases:["GET /repos/{owner}/{repo}/releases"],listStatusesForRef:["GET /repos/{owner}/{repo}/commits/{ref}/statuses",{},{renamed:["repos","listCommitStatusesForRef"]}],listTags:["GET /repos/{owner}/{repo}/tags"],listTeams:["GET /repos/{owner}/{repo}/teams"],listTopics:["GET /repos/{owner}/{repo}/topics",{mediaType:{previews:["mercy"]}},{renamed:["repos","getAllTopics"]}],listWebhooks:["GET /repos/{owner}/{repo}/hooks"],merge:["POST /repos/{owner}/{repo}/merges"],pingHook:["POST /repos/{owner}/{repo}/hooks/{hook_id}/pings",{},{renamed:["repos","pingWebhook"]}],pingWebhook:["POST /repos/{owner}/{repo}/hooks/{hook_id}/pings"],removeAppAccessRestrictions:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/apps",{},{mapToData:"apps"}],removeBranchProtection:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection",{},{renamed:["repos","deleteBranchProtection"]}],removeCollaborator:["DELETE /repos/{owner}/{repo}/collaborators/{username}"],removeDeployKey:["DELETE /repos/{owner}/{repo}/keys/{key_id}",{},{renamed:["repos","deleteDeployKey"]}],removeProtectedBranchAdminEnforcement:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/enforce_admins",{},{renamed:["repos","deleteAdminBranchProtection"]}],removeProtectedBranchAppRestrictions:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/apps",{},{mapToData:"apps",renamed:["repos","removeAppAccessRestrictions"]}],removeProtectedBranchPullRequestReviewEnforcement:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/required_pull_request_reviews",{},{renamed:["repos","deletePullRequestReviewProtection"]}],removeProtectedBranchRequiredSignatures:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/required_signatures",{mediaType:{previews:["zzzax"]}},{renamed:["repos","deleteCommitSignatureProtection"]}],removeProtectedBranchRequiredStatusChecks:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks",{},{renamed:["repos","removeStatusChecksProtection"]}],removeProtectedBranchRequiredStatusChecksContexts:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts",{},{mapToData:"contexts",renamed:["repos","removeStatusCheckContexts"]}],removeProtectedBranchRestrictions:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/restrictions",{},{renamed:["repos","deleteAccessRestrictions"]}],removeProtectedBranchTeamRestrictions:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams",{},{mapToData:"teams",renamed:["repos","removeTeamAccessRestrictions"]}],removeProtectedBranchUserRestrictions:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users",{},{mapToData:"users",renamed:["repos","removeUserAccessRestrictions"]}],removeStatusCheckContexts:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts",{},{mapToData:"contexts"}],removeStatusCheckProtection:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks"],removeTeamAccessRestrictions:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams",{},{mapToData:"teams"}],removeUserAccessRestrictions:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users",{},{mapToData:"users"}],replaceAllTopics:["PUT /repos/{owner}/{repo}/topics",{mediaType:{previews:["mercy"]}}],replaceProtectedBranchAppRestrictions:["PUT /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/apps",{},{mapToData:"apps",renamed:["repos","setAppAccessRestrictions"]}],replaceProtectedBranchRequiredStatusChecksContexts:["PUT /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts",{},{mapToData:"contexts",renamed:["repos","setStatusCheckContexts"]}],replaceProtectedBranchTeamRestrictions:["PUT /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams",{},{mapToData:"teams",renamed:["repos","setTeamAccessRestrictions"]}],replaceProtectedBranchUserRestrictions:["PUT /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users",{},{mapToData:"users",renamed:["repos","setUserAccessRestrictions"]}],replaceTopics:["PUT /repos/{owner}/{repo}/topics",{mediaType:{previews:["mercy"]}},{renamed:["repos","replaceAllTopics"]}],requestPageBuild:["POST /repos/{owner}/{repo}/pages/builds",{},{renamed:["repos","requestPagesBuild"]}],requestPagesBuild:["POST /repos/{owner}/{repo}/pages/builds"],retrieveCommunityProfileMetrics:["GET /repos/{owner}/{repo}/community/profile",{},{renamed:["repos","getCommunityProfileMetrics"]}],setAdminBranchProtection:["POST /repos/{owner}/{repo}/branches/{branch}/protection/enforce_admins"],setAppAccessRestrictions:["PUT /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/apps",{},{mapToData:"apps"}],setStatusCheckContexts:["PUT /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts",{},{mapToData:"contexts"}],setTeamAccessRestrictions:["PUT /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams",{},{mapToData:"teams"}],setUserAccessRestrictions:["PUT /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users",{},{mapToData:"users"}],testPushHook:["POST /repos/{owner}/{repo}/hooks/{hook_id}/tests",{},{renamed:["repos","testPushWebhook"]}],testPushWebhook:["POST /repos/{owner}/{repo}/hooks/{hook_id}/tests"],transfer:["POST /repos/{owner}/{repo}/transfer"],update:["PATCH /repos/{owner}/{repo}"],updateBranchProtection:["PUT /repos/{owner}/{repo}/branches/{branch}/protection"],updateCommitComment:["PATCH /repos/{owner}/{repo}/comments/{comment_id}"],updateHook:["PATCH /repos/{owner}/{repo}/hooks/{hook_id}",{},{renamed:["repos","updateWebhook"]}],updateInformationAboutPagesSite:["PUT /repos/{owner}/{repo}/pages"],updateInvitation:["PATCH /repos/{owner}/{repo}/invitations/{invitation_id}"],updateProtectedBranchPullRequestReviewEnforcement:["PATCH /repos/{owner}/{repo}/branches/{branch}/protection/required_pull_request_reviews",{},{renamed:["repos","updatePullRequestReviewProtection"]}],updateProtectedBranchRequiredStatusChecks:["PATCH /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks",{},{renamed:["repos","updateStatusChecksProtection"]}],updatePullRequestReviewProtection:["PATCH /repos/{owner}/{repo}/branches/{branch}/protection/required_pull_request_reviews"],updateRelease:["PATCH /repos/{owner}/{repo}/releases/{release_id}"],updateReleaseAsset:["PATCH /repos/{owner}/{repo}/releases/assets/{asset_id}"],updateStatusCheckPotection:["PATCH /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks"],updateWebhook:["PATCH /repos/{owner}/{repo}/hooks/{hook_id}"],uploadReleaseAsset:["POST /repos/{owner}/{repo}/releases/{release_id}/assets{?name,label}",{baseUrl:"https://uploads.github.com"}]},search:{code:["GET /search/code"],commits:["GET /search/commits",{mediaType:{previews:["cloak"]}}],issuesAndPullRequests:["GET /search/issues"],labels:["GET /search/labels"],repos:["GET /search/repositories"],topics:["GET /search/topics"],users:["GET /search/users"]},teams:{addOrUpdateMembershipForUserInOrg:["PUT /orgs/{org}/teams/{team_slug}/memberships/{username}"],addOrUpdateMembershipInOrg:["PUT /orgs/{org}/teams/{team_slug}/memberships/{username}",{},{renamed:["teams","addOrUpdateMembershipForUserInOrg"]}],addOrUpdateProjectInOrg:["PUT /orgs/{org}/teams/{team_slug}/projects/{project_id}",{mediaType:{previews:["inertia"]}},{renamed:["teams","addOrUpdateProjectPermissionsInOrg"]}],addOrUpdateProjectPermissionsInOrg:["PUT /orgs/{org}/teams/{team_slug}/projects/{project_id}",{mediaType:{previews:["inertia"]}}],addOrUpdateRepoInOrg:["PUT /orgs/{org}/teams/{team_slug}/repos/{owner}/{repo}",{},{renamed:["teams","addOrUpdateRepoPermissionsInOrg"]}],addOrUpdateRepoPermissionsInOrg:["PUT /orgs/{org}/teams/{team_slug}/repos/{owner}/{repo}"],checkManagesRepoInOrg:["GET /orgs/{org}/teams/{team_slug}/repos/{owner}/{repo}",{},{renamed:["teams","checkPermissionsForRepoInOrg"]}],checkPermissionsForProjectInOrg:["GET /orgs/{org}/teams/{team_slug}/projects/{project_id}",{mediaType:{previews:["inertia"]}}],checkPermissionsForRepoInOrg:["GET /orgs/{org}/teams/{team_slug}/repos/{owner}/{repo}"],create:["POST /orgs/{org}/teams"],createDiscussionCommentInOrg:["POST /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments"],createDiscussionInOrg:["POST /orgs/{org}/teams/{team_slug}/discussions"],deleteDiscussionCommentInOrg:["DELETE /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}"],deleteDiscussionInOrg:["DELETE /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}"],deleteInOrg:["DELETE /orgs/{org}/teams/{team_slug}"],getByName:["GET /orgs/{org}/teams/{team_slug}"],getDiscussionCommentInOrg:["GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}"],getDiscussionInOrg:["GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}"],getMembershipForUserInOrg:["GET /orgs/{org}/teams/{team_slug}/memberships/{username}"],getMembershipInOrg:["GET /orgs/{org}/teams/{team_slug}/memberships/{username}",{},{renamed:["teams","getMembershipForUserInOrg"]}],list:["GET /orgs/{org}/teams"],listChildInOrg:["GET /orgs/{org}/teams/{team_slug}/teams"],listDiscussionCommentsInOrg:["GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments"],listDiscussionsInOrg:["GET /orgs/{org}/teams/{team_slug}/discussions"],listForAuthenticatedUser:["GET /user/teams"],listMembersInOrg:["GET /orgs/{org}/teams/{team_slug}/members"],listPendingInvitationsInOrg:["GET /orgs/{org}/teams/{team_slug}/invitations"],listProjectsInOrg:["GET /orgs/{org}/teams/{team_slug}/projects",{mediaType:{previews:["inertia"]}}],listReposInOrg:["GET /orgs/{org}/teams/{team_slug}/repos"],removeMembershipForUserInOrg:["DELETE /orgs/{org}/teams/{team_slug}/memberships/{username}"],removeMembershipInOrg:["DELETE /orgs/{org}/teams/{team_slug}/memberships/{username}",{},{renamed:["teams","removeMembershipForUserInOrg"]}],removeProjectInOrg:["DELETE /orgs/{org}/teams/{team_slug}/projects/{project_id}"],removeRepoInOrg:["DELETE /orgs/{org}/teams/{team_slug}/repos/{owner}/{repo}"],reviewProjectInOrg:["GET /orgs/{org}/teams/{team_slug}/projects/{project_id}",{mediaType:{previews:["inertia"]}},{renamed:["teams","checkPermissionsForProjectInOrg"]}],updateDiscussionCommentInOrg:["PATCH /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}"],updateDiscussionInOrg:["PATCH /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}"],updateInOrg:["PATCH /orgs/{org}/teams/{team_slug}"]},users:{addEmailForAuthenticated:["POST /user/emails"],addEmails:["POST /user/emails",{},{renamed:["users","addEmailsForAuthenticated"]}],block:["PUT /user/blocks/{username}"],checkBlocked:["GET /user/blocks/{username}"],checkFollowing:["GET /user/following/{username}",{},{renamed:["users","checkPersonIsFollowedByAuthenticated"]}],checkFollowingForUser:["GET /users/{username}/following/{target_user}"],checkPersonIsFollowedByAuthenticated:["GET /user/following/{username}"],createGpgKey:["POST /user/gpg_keys",{},{renamed:["users","createGpgKeyForAuthenticated"]}],createGpgKeyForAuthenticated:["POST /user/gpg_keys"],createPublicKey:["POST /user/keys",{},{renamed:["users","createPublicSshKeyForAuthenticated"]}],createPublicSshKeyForAuthenticated:["POST /user/keys"],deleteEmailForAuthenticated:["DELETE /user/emails"],deleteEmails:["DELETE /user/emails",{},{renamed:["users","deleteEmailsForAuthenticated"]}],deleteGpgKey:["DELETE /user/gpg_keys/{gpg_key_id}",{},{renamed:["users","deleteGpgKeyForAuthenticated"]}],deleteGpgKeyForAuthenticated:["DELETE /user/gpg_keys/{gpg_key_id}"],deletePublicKey:["DELETE /user/keys/{key_id}",{},{renamed:["users","deletePublicSshKeyForAuthenticated"]}],deletePublicSshKeyForAuthenticated:["DELETE /user/keys/{key_id}"],follow:["PUT /user/following/{username}"],getAuthenticated:["GET /user"],getByUsername:["GET /users/{username}"],getContextForUser:["GET /users/{username}/hovercard"],getGpgKey:["GET /user/gpg_keys/{gpg_key_id}",{},{renamed:["users","getGpgKeyForAuthenticated"]}],getGpgKeyForAuthenticated:["GET /user/gpg_keys/{gpg_key_id}"],getPublicKey:["GET /user/keys/{key_id}",{},{renamed:["users","getPublicSshKeyForAuthenticated"]}],getPublicSshKeyForAuthenticated:["GET /user/keys/{key_id}"],list:["GET /users"],listBlocked:["GET /user/blocks",{},{renamed:["users","listBlockedByAuthenticated"]}],listBlockedByAuthenticated:["GET /user/blocks"],listEmails:["GET /user/emails",{},{renamed:["users","listEmailsForAuthenticated"]}],listEmailsForAuthenticated:["GET /user/emails"],listFollowedByAuthenticated:["GET /user/following"],listFollowersForAuthenticatedUser:["GET /user/followers"],listFollowersForUser:["GET /users/{username}/followers"],listFollowingForAuthenticatedUser:["GET /user/following",{},{renamed:["users","listFollowedByAuthenticated"]}],listFollowingForUser:["GET /users/{username}/following"],listGpgKeys:["GET /user/gpg_keys",{},{renamed:["users","listGpgKeysForAuthenticated"]}],listGpgKeysForAuthenticated:["GET /user/gpg_keys"],listGpgKeysForUser:["GET /users/{username}/gpg_keys"],listPublicEmails:["GET /user/public_emails",{},{renamed:["users","listPublicEmailsForAuthenticatedUser"]}],listPublicEmailsForAuthenticated:["GET /user/public_emails"],listPublicKeys:["GET /user/keys",{},{renamed:["users","listPublicSshKeysForAuthenticated"]}],listPublicKeysForUser:["GET /users/{username}/keys"],listPublicSshKeysForAuthenticated:["GET /user/keys"],setPrimaryEmailVisibilityForAuthenticated:["PATCH /user/email/visibility"],togglePrimaryEmailVisibility:["PATCH /user/email/visibility",{},{renamed:["users","setPrimaryEmailVisibilityForAuthenticated"]}],unblock:["DELETE /user/blocks/{username}"],unfollow:["DELETE /user/following/{username}"],updateAuthenticated:["PATCH /user"]}};function ke(e,r,t,o,s){var n=e.request.defaults(o);return Object.assign((function(){var o,i=(o=n.endpoint).merge.apply(o,arguments);if(s.mapToData)return i=Object.assign({},i,E({data:i[s.mapToData]},s.mapToData,void 0)),n(i);if(s.renamed){var a=P(s.renamed,2),c=a[0],p=a[1];e.log.warn("octokit.".concat(r,".").concat(t,"() has been renamed to octokit.").concat(c,".").concat(p,"()"))}if(s.deprecated&&e.log.warn(s.deprecated),s.renamedParameters){for(var u,l=(u=n.endpoint).merge.apply(u,arguments),m=0,d=Object.entries(s.renamedParameters);m<d.length;m++){var g=P(d[m],2),h=g[0],T=g[1];h in l&&(e.log.warn('"'.concat(h,'" parameter is deprecated for "octokit.').concat(r,".").concat(t,'()". Use "').concat(T,'" instead')),T in l||(l[T]=l[h]),delete l[h])}return n(l)}return n.apply(void 0,arguments)}),n)}function Ge(e){return function(e,r){for(var t={},o=0,s=Object.entries(r);o<s.length;o++)for(var n=P(s[o],2),i=n[0],a=n[1],c=0,p=Object.entries(a);c<p.length;c++){var u=P(p[c],2),l=u[0],m=P(u[1],3),d=m[0],g=m[1],h=m[2],T=P(d.split(/ /),2),f=T[0],w=T[1],E=Object.assign({method:f,url:w},g);t[i]||(t[i]={});var b=t[i];h?b[l]=ke(e,i,l,E,h):b[l]=e.request.defaults(E)}return t}(e,Pe)}Ge.VERSION="3.17.0";const Oe=new(we.plugin(Ee,Ge,_e).defaults({userAgent:"octokit-rest.js/".concat("17.11.2")}))({timeZone:"Europe/Paris",baseUrl:"https://api.github.com",log:{debug:()=>{},info:()=>{},warn:console.warn,error:console.error},request:{agent:void 0,fetch:void 0,timeout:0}});var Re=t("2QXB");function Se(){return(Se=Object.assign||function(e){for(var r=1;r<arguments.length;r++){var t=arguments[r];for(var o in t)Object.prototype.hasOwnProperty.call(t,o)&&(e[o]=t[o])}return e}).apply(this,arguments)}function Ae(e,r){if(null==e)return{};var t,o,s=function(e,r){if(null==e)return{};var t,o,s={},n=Object.keys(e);for(o=0;o<n.length;o++)t=n[o],r.indexOf(t)>=0||(s[t]=e[t]);return s}(e,r);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(o=0;o<n.length;o++)t=n[o],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(s[t]=e[t])}return s}var Fe=Object(o.forwardRef)((function(e,r){var t=e.color,o=void 0===t?"currentColor":t,n=e.size,i=void 0===n?24:n,a=Ae(e,["color","size"]);return s.a.createElement("svg",Se({ref:r,xmlns:"http://www.w3.org/2000/svg",width:i,height:i,viewBox:"0 0 24 24",fill:"none",stroke:o,strokeWidth:"2",strokeLinecap:"round",strokeLinejoin:"round"},a),s.a.createElement("circle",{cx:"12",cy:"12",r:"10"}),s.a.createElement("path",{d:"M8 14s1.5 2 4 2 4-2 4-2"}),s.a.createElement("line",{x1:"9",y1:"9",x2:"9.01",y2:"9"}),s.a.createElement("line",{x1:"15",y1:"9",x2:"15.01",y2:"9"}))}));Fe.displayName="Smile";var Ce=Fe;t("2kIL");const Ue={"+1":"👍","-1":"👎",laugh:"😄",hooray:"🎉",confused:"😕",heart:"❤️",rocket:"🚀",eyes:"👀"},je=({issue:e,reactions:r})=>{const t=Object.keys(r);return s.a.createElement("ul",{className:"reactions"},t.length>0?t.map(e=>{return s.a.createElement("li",{key:e,"aria-label":`${r[e]} pers. reacted with ${e} emoji`,className:"reactions_item"},Ue[e],s.a.createElement("span",{role:"presentation",className:"reactions_number"},(t=r[e])>99?"99+":""+t));var t}):s.a.createElement("li",{className:"reactions_item reactions_item--empty"},"No reaction"),s.a.createElement("li",{className:"reactions_item"},s.a.createElement("a",{"aria-label":"Add your reaction on GitHub",href:"https://github.com/qmachard/developers-blog/issues/"+e,className:"reactions_add",target:"_blank",rel:"noopener noreferrer"},s.a.createElement(Ce,{className:"icon"}))))};je.propTypes={issue:n.string.isRequired,reactions:n.objectOf(n.number).isRequired},je.defaultProps={};var De=je;function Le(){return(Le=Object.assign||function(e){for(var r=1;r<arguments.length;r++){var t=arguments[r];for(var o in t)Object.prototype.hasOwnProperty.call(t,o)&&(e[o]=t[o])}return e}).apply(this,arguments)}function qe(e,r){if(null==e)return{};var t,o,s=function(e,r){if(null==e)return{};var t,o,s={},n=Object.keys(e);for(o=0;o<n.length;o++)t=n[o],r.indexOf(t)>=0||(s[t]=e[t]);return s}(e,r);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(o=0;o<n.length;o++)t=n[o],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(s[t]=e[t])}return s}var Ie=Object(o.forwardRef)((function(e,r){var t=e.color,o=void 0===t?"currentColor":t,n=e.size,i=void 0===n?24:n,a=qe(e,["color","size"]);return s.a.createElement("svg",Le({ref:r,xmlns:"http://www.w3.org/2000/svg",width:i,height:i,viewBox:"0 0 24 24",fill:"none",stroke:o,strokeWidth:"2",strokeLinecap:"round",strokeLinejoin:"round"},a),s.a.createElement("line",{x1:"19",y1:"12",x2:"5",y2:"12"}),s.a.createElement("polyline",{points:"12 19 5 12 12 5"}))}));Ie.displayName="ArrowLeft";var xe=Ie,Be=t("4MYc"),He=t("Wbzz"),Me=(t("9JI2"),t("pZ53")),We=t("a2xJ");const Ne=({title:e,cover:r,html:t,excerpt:o,tags:n})=>s.a.createElement(We.a,{padding:!1,className:"post"},s.a.createElement(He.a,{to:"/",className:"post_back"},s.a.createElement(xe,null)),s.a.createElement("header",{className:"post_cover",style:{backgroundImage:`url('${r}')`}},s.a.createElement("div",{className:"post_cover_inner container"},s.a.createElement("h1",{className:"post_title title-1"},e),o&&s.a.createElement("p",{className:"post_excerpt"},o),n&&s.a.createElement("ul",{className:"post_tags"},n.map(e=>s.a.createElement("li",{key:"tag-"+e,className:"post_tag"},s.a.createElement(Me.a,{className:"icon",icon:s.a.createElement(Be.a,{className:"icon","aria-label":"tag: "})},e)))))),s.a.createElement("div",{className:"post_inner container wysiwyg",dangerouslySetInnerHTML:{__html:t}}));Ne.propTypes={title:n.string.isRequired,cover:n.string.isRequired,html:n.string.isRequired,excerpt:n.string,tags:n.arrayOf(n.string)},Ne.defaultProps={excerpt:"",tags:[]};var Ke=Ne;t("x+p2");const ze=({post:e,reactions:r})=>s.a.createElement("main",{className:"post-page"},s.a.createElement(Ke,{cover:e.cover,html:e.html,title:e.title,tags:e.tags}),s.a.createElement("aside",{className:"post-page_aside"},s.a.createElement(De,{issue:e.id,reactions:r})));ze.propTypes={post:n.shape({id:n.string.isRequired,title:n.string.isRequired,path:n.string.isRequired,cover:n.string.isRequired,html:n.string.isRequired,excerpt:n.string,tags:n.arrayOf(n.string)}).isRequired,reactions:n.objectOf(n.number)},ze.defaultProps={reactions:[]};var Je=ze,Ve=t("DZlQ");const $e=({data:{site:{siteMetadata:{theme:e}},post:r}})=>{const t=(e=>{const[r,t]=Object(o.useState)({});return Object(o.useEffect)(()=>{Oe.reactions.listForIssue({repo:"developers-blog",owner:"qmachard",issue_number:parseInt(e,10)}).then(e=>e.data).then(e=>{t(e.map(e=>e.content).reduce((e,r)=>(e[r]=(e[r]||0)+1,e),{}))})},[e]),r})(r.id);return s.a.createElement(Re.a,{theme:e,displayAsideOnMobile:!1},s.a.createElement(Ve.a,{title:r.title,description:r.excerpt,image:r.cover,author:r.author.name,published_time:r.published_at}),s.a.createElement(Je,{post:r,author:r.author,reactions:t}))};$e.propTypes={data:n.shape({site:n.shape({siteMetadata:n.shape({theme:n.string})}),post:n.shape({id:n.string,title:n.string,html:n.string,path:n.string,cover:n.string,author:n.shape({avatar:n.string,username:n.string,name:n.string,id:n.string}),excerpt:n.string,published_at:n.string})}).isRequired};const Ze="1184090057";r.default=$e},VmuJ:function(e,r,t){var o=t("1jOq");function s(e){var r=function r(){return r.called?r.value:(r.called=!0,r.value=e.apply(this,arguments))};return r.called=!1,r}function n(e){var r=function r(){if(r.called)throw new Error(r.onceError);return r.called=!0,r.value=e.apply(this,arguments)},t=e.name||"Function wrapped with `once`";return r.onceError=t+" shouldn't be called more than once",r.called=!1,r}e.exports=o(s),e.exports.strict=o(n),s.proto=s((function(){Object.defineProperty(Function.prototype,"once",{value:function(){return s(this)},configurable:!0}),Object.defineProperty(Function.prototype,"onceStrict",{value:function(){return n(this)},configurable:!0})}))},Z8pk:function(e,r,t){var o=t("5uH7"),s=t("EUoV"),n=t("R+3T"),i=Function.bind,a=i.bind(i);function c(e,r,t){var o=a(n,null).apply(null,t?[r,t]:[r]);e.api={remove:o},e.remove=o,["before","error","after","wrap"].forEach((function(o){var n=t?[r,o,t]:[r,o];e[o]=e.api[o]=a(s,null).apply(null,n)}))}function p(){var e={registry:{}},r=o.bind(null,e);return c(r,e),r}var u=!1;function l(){return u||(console.warn('[before-after-hook]: "Hook()" repurposing warning, use "Hook.Collection()". Read more: https://git.io/upgrade-before-after-hook-to-1.4'),u=!0),p()}l.Singular=function(){var e={registry:{}},r=o.bind(null,e,"h");return c(r,e,"h"),r}.bind(),l.Collection=p.bind(),e.exports=l,e.exports.Hook=l,e.exports.Singular=l.Singular,e.exports.Collection=l.Collection},ls82:function(e,r,t){var o=function(e){"use strict";var r=Object.prototype,t=r.hasOwnProperty,o="function"==typeof Symbol?Symbol:{},s=o.iterator||"@@iterator",n=o.asyncIterator||"@@asyncIterator",i=o.toStringTag||"@@toStringTag";function a(e,r,t){return Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}),e[r]}try{a({},"")}catch(G){a=function(e,r,t){return e[r]=t}}function c(e,r,t,o){var s=r&&r.prototype instanceof l?r:l,n=Object.create(s.prototype),i=new _(o||[]);return n._invoke=function(e,r,t){var o="suspendedStart";return function(s,n){if("executing"===o)throw new Error("Generator is already running");if("completed"===o){if("throw"===s)throw n;return k()}for(t.method=s,t.arg=n;;){var i=t.delegate;if(i){var a=b(i,t);if(a){if(a===u)continue;return a}}if("next"===t.method)t.sent=t._sent=t.arg;else if("throw"===t.method){if("suspendedStart"===o)throw o="completed",t.arg;t.dispatchException(t.arg)}else"return"===t.method&&t.abrupt("return",t.arg);o="executing";var c=p(e,r,t);if("normal"===c.type){if(o=t.done?"completed":"suspendedYield",c.arg===u)continue;return{value:c.arg,done:t.done}}"throw"===c.type&&(o="completed",t.method="throw",t.arg=c.arg)}}}(e,t,i),n}function p(e,r,t){try{return{type:"normal",arg:e.call(r,t)}}catch(G){return{type:"throw",arg:G}}}e.wrap=c;var u={};function l(){}function m(){}function d(){}var g={};g[s]=function(){return this};var h=Object.getPrototypeOf,T=h&&h(h(P([])));T&&T!==r&&t.call(T,s)&&(g=T);var f=d.prototype=l.prototype=Object.create(g);function w(e){["next","throw","return"].forEach((function(r){a(e,r,(function(e){return this._invoke(r,e)}))}))}function E(e,r){var o;this._invoke=function(s,n){function i(){return new r((function(o,i){!function o(s,n,i,a){var c=p(e[s],e,n);if("throw"!==c.type){var u=c.arg,l=u.value;return l&&"object"==typeof l&&t.call(l,"__await")?r.resolve(l.__await).then((function(e){o("next",e,i,a)}),(function(e){o("throw",e,i,a)})):r.resolve(l).then((function(e){u.value=e,i(u)}),(function(e){return o("throw",e,i,a)}))}a(c.arg)}(s,n,o,i)}))}return o=o?o.then(i,i):i()}}function b(e,r){var t=e.iterator[r.method];if(void 0===t){if(r.delegate=null,"throw"===r.method){if(e.iterator.return&&(r.method="return",r.arg=void 0,b(e,r),"throw"===r.method))return u;r.method="throw",r.arg=new TypeError("The iterator does not provide a 'throw' method")}return u}var o=p(t,e.iterator,r.arg);if("throw"===o.type)return r.method="throw",r.arg=o.arg,r.delegate=null,u;var s=o.arg;return s?s.done?(r[e.resultName]=s.value,r.next=e.nextLoc,"return"!==r.method&&(r.method="next",r.arg=void 0),r.delegate=null,u):s:(r.method="throw",r.arg=new TypeError("iterator result is not an object"),r.delegate=null,u)}function v(e){var r={tryLoc:e[0]};1 in e&&(r.catchLoc=e[1]),2 in e&&(r.finallyLoc=e[2],r.afterLoc=e[3]),this.tryEntries.push(r)}function y(e){var r=e.completion||{};r.type="normal",delete r.arg,e.completion=r}function _(e){this.tryEntries=[{tryLoc:"root"}],e.forEach(v,this),this.reset(!0)}function P(e){if(e){var r=e[s];if(r)return r.call(e);if("function"==typeof e.next)return e;if(!isNaN(e.length)){var o=-1,n=function r(){for(;++o<e.length;)if(t.call(e,o))return r.value=e[o],r.done=!1,r;return r.value=void 0,r.done=!0,r};return n.next=n}}return{next:k}}function k(){return{value:void 0,done:!0}}return m.prototype=f.constructor=d,d.constructor=m,m.displayName=a(d,i,"GeneratorFunction"),e.isGeneratorFunction=function(e){var r="function"==typeof e&&e.constructor;return!!r&&(r===m||"GeneratorFunction"===(r.displayName||r.name))},e.mark=function(e){return Object.setPrototypeOf?Object.setPrototypeOf(e,d):(e.__proto__=d,a(e,i,"GeneratorFunction")),e.prototype=Object.create(f),e},e.awrap=function(e){return{__await:e}},w(E.prototype),E.prototype[n]=function(){return this},e.AsyncIterator=E,e.async=function(r,t,o,s,n){void 0===n&&(n=Promise);var i=new E(c(r,t,o,s),n);return e.isGeneratorFunction(t)?i:i.next().then((function(e){return e.done?e.value:i.next()}))},w(f),a(f,i,"Generator"),f[s]=function(){return this},f.toString=function(){return"[object Generator]"},e.keys=function(e){var r=[];for(var t in e)r.push(t);return r.reverse(),function t(){for(;r.length;){var o=r.pop();if(o in e)return t.value=o,t.done=!1,t}return t.done=!0,t}},e.values=P,_.prototype={constructor:_,reset:function(e){if(this.prev=0,this.next=0,this.sent=this._sent=void 0,this.done=!1,this.delegate=null,this.method="next",this.arg=void 0,this.tryEntries.forEach(y),!e)for(var r in this)"t"===r.charAt(0)&&t.call(this,r)&&!isNaN(+r.slice(1))&&(this[r]=void 0)},stop:function(){this.done=!0;var e=this.tryEntries[0].completion;if("throw"===e.type)throw e.arg;return this.rval},dispatchException:function(e){if(this.done)throw e;var r=this;function o(t,o){return i.type="throw",i.arg=e,r.next=t,o&&(r.method="next",r.arg=void 0),!!o}for(var s=this.tryEntries.length-1;s>=0;--s){var n=this.tryEntries[s],i=n.completion;if("root"===n.tryLoc)return o("end");if(n.tryLoc<=this.prev){var a=t.call(n,"catchLoc"),c=t.call(n,"finallyLoc");if(a&&c){if(this.prev<n.catchLoc)return o(n.catchLoc,!0);if(this.prev<n.finallyLoc)return o(n.finallyLoc)}else if(a){if(this.prev<n.catchLoc)return o(n.catchLoc,!0)}else{if(!c)throw new Error("try statement without catch or finally");if(this.prev<n.finallyLoc)return o(n.finallyLoc)}}}},abrupt:function(e,r){for(var o=this.tryEntries.length-1;o>=0;--o){var s=this.tryEntries[o];if(s.tryLoc<=this.prev&&t.call(s,"finallyLoc")&&this.prev<s.finallyLoc){var n=s;break}}n&&("break"===e||"continue"===e)&&n.tryLoc<=r&&r<=n.finallyLoc&&(n=null);var i=n?n.completion:{};return i.type=e,i.arg=r,n?(this.method="next",this.next=n.finallyLoc,u):this.complete(i)},complete:function(e,r){if("throw"===e.type)throw e.arg;return"break"===e.type||"continue"===e.type?this.next=e.arg:"return"===e.type?(this.rval=this.arg=e.arg,this.method="return",this.next="end"):"normal"===e.type&&r&&(this.next=r),u},finish:function(e){for(var r=this.tryEntries.length-1;r>=0;--r){var t=this.tryEntries[r];if(t.finallyLoc===e)return this.complete(t.completion,t.afterLoc),y(t),u}},catch:function(e){for(var r=this.tryEntries.length-1;r>=0;--r){var t=this.tryEntries[r];if(t.tryLoc===e){var o=t.completion;if("throw"===o.type){var s=o.arg;y(t)}return s}}throw new Error("illegal catch attempt")},delegateYield:function(e,r,t){return this.delegate={iterator:P(e),resultName:r,nextLoc:t},"next"===this.method&&(this.arg=void 0),u}},e}(e.exports);try{regeneratorRuntime=o}catch(s){Function("r","regeneratorRuntime = r")(o)}},o0o1:function(e,r,t){e.exports=t("ls82")},oY9k:function(e,r,t){"use strict";var o=function(){if("undefined"!=typeof self)return self;if("undefined"!=typeof window)return window;if(void 0!==o)return o;throw new Error("unable to locate global object")}();e.exports=r=o.fetch,r.default=o.fetch.bind(o),r.Headers=o.Headers,r.Request=o.Request,r.Response=o.Response},"x+p2":function(e,r,t){},z6pS:function(e,r,t){"use strict";(function(e){function o(){return"object"==typeof navigator&&"userAgent"in navigator?navigator.userAgent:"object"==typeof e&&"version"in e?"Node.js/".concat(e.version.substr(1)," (").concat(e.platform,"; ").concat(e.arch,")"):"<environment undetectable>"}t.d(r,"a",(function(){return o}))}).call(this,t("8oxB"))}}]);
//# sourceMappingURL=component---src-templates-post-jsx-7ac41a58cb2eb877862c.js.map